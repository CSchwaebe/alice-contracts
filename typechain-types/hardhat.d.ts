/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;
    getContractFactory(
      name: "EntropyEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EntropyEvents__factory>;
    getContractFactory(
      name: "IEntropy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEntropy__factory>;
    getContractFactory(
      name: "IEntropyConsumer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEntropyConsumer__factory>;
    getContractFactory(
      name: "Climb",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Climb__factory>;
    getContractFactory(
      name: "IPoints",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPoints__factory>;
    getContractFactory(
      name: "GameMaster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GameMaster__factory>;
    getContractFactory(
      name: "Bidding",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Bidding__factory>;
    getContractFactory(
      name: "IRagnarokGameMaster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRagnarokGameMaster__factory>;
    getContractFactory(
      name: "Descend",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Descend__factory>;
    getContractFactory(
      name: "IRagnarokGameMaster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRagnarokGameMaster__factory>;
    getContractFactory(
      name: "Doors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Doors__factory>;
    getContractFactory(
      name: "IRagnarokGameMaster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRagnarokGameMaster__factory>;
    getContractFactory(
      name: "Equilibrium",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Equilibrium__factory>;
    getContractFactory(
      name: "IRagnarokGameMaster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRagnarokGameMaster__factory>;
    getContractFactory(
      name: "IRagnarokGameMaster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRagnarokGameMaster__factory>;
    getContractFactory(
      name: "Threes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Threes__factory>;
    getContractFactory(
      name: "IDoors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDoors__factory>;
    getContractFactory(
      name: "IGame",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGame__factory>;
    getContractFactory(
      name: "IRagnarokGameMaster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRagnarokGameMaster__factory>;
    getContractFactory(
      name: "Points",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Points__factory>;

    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "SafeCast",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;
    getContractAt(
      name: "EntropyEvents",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EntropyEvents>;
    getContractAt(
      name: "IEntropy",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IEntropy>;
    getContractAt(
      name: "IEntropyConsumer",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IEntropyConsumer>;
    getContractAt(
      name: "Climb",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Climb>;
    getContractAt(
      name: "IPoints",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IPoints>;
    getContractAt(
      name: "GameMaster",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GameMaster>;
    getContractAt(
      name: "Bidding",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Bidding>;
    getContractAt(
      name: "IRagnarokGameMaster",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRagnarokGameMaster>;
    getContractAt(
      name: "Descend",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Descend>;
    getContractAt(
      name: "IRagnarokGameMaster",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRagnarokGameMaster>;
    getContractAt(
      name: "Doors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Doors>;
    getContractAt(
      name: "IRagnarokGameMaster",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRagnarokGameMaster>;
    getContractAt(
      name: "Equilibrium",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Equilibrium>;
    getContractAt(
      name: "IRagnarokGameMaster",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRagnarokGameMaster>;
    getContractAt(
      name: "IRagnarokGameMaster",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRagnarokGameMaster>;
    getContractAt(
      name: "Threes",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Threes>;
    getContractAt(
      name: "IDoors",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IDoors>;
    getContractAt(
      name: "IGame",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IGame>;
    getContractAt(
      name: "IRagnarokGameMaster",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRagnarokGameMaster>;
    getContractAt(
      name: "Points",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Points>;

    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "EntropyEvents",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EntropyEvents>;
    deployContract(
      name: "IEntropy",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEntropy>;
    deployContract(
      name: "IEntropyConsumer",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEntropyConsumer>;
    deployContract(
      name: "Climb",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Climb>;
    deployContract(
      name: "IPoints",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPoints>;
    deployContract(
      name: "GameMaster",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GameMaster>;
    deployContract(
      name: "Bidding",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Bidding>;
    deployContract(
      name: "IRagnarokGameMaster",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRagnarokGameMaster>;
    deployContract(
      name: "Descend",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Descend>;
    deployContract(
      name: "IRagnarokGameMaster",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRagnarokGameMaster>;
    deployContract(
      name: "Doors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Doors>;
    deployContract(
      name: "IRagnarokGameMaster",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRagnarokGameMaster>;
    deployContract(
      name: "Equilibrium",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Equilibrium>;
    deployContract(
      name: "IRagnarokGameMaster",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRagnarokGameMaster>;
    deployContract(
      name: "IRagnarokGameMaster",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRagnarokGameMaster>;
    deployContract(
      name: "Threes",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Threes>;
    deployContract(
      name: "IDoors",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDoors>;
    deployContract(
      name: "IGame",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGame>;
    deployContract(
      name: "IRagnarokGameMaster",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRagnarokGameMaster>;
    deployContract(
      name: "Points",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Points>;

    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "SafeCast",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SafeCast>;
    deployContract(
      name: "ReentrancyGuard",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ReentrancyGuard>;
    deployContract(
      name: "EntropyEvents",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EntropyEvents>;
    deployContract(
      name: "IEntropy",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEntropy>;
    deployContract(
      name: "IEntropyConsumer",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IEntropyConsumer>;
    deployContract(
      name: "Climb",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Climb>;
    deployContract(
      name: "IPoints",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IPoints>;
    deployContract(
      name: "GameMaster",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GameMaster>;
    deployContract(
      name: "Bidding",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Bidding>;
    deployContract(
      name: "IRagnarokGameMaster",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRagnarokGameMaster>;
    deployContract(
      name: "Descend",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Descend>;
    deployContract(
      name: "IRagnarokGameMaster",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRagnarokGameMaster>;
    deployContract(
      name: "Doors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Doors>;
    deployContract(
      name: "IRagnarokGameMaster",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRagnarokGameMaster>;
    deployContract(
      name: "Equilibrium",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Equilibrium>;
    deployContract(
      name: "IRagnarokGameMaster",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRagnarokGameMaster>;
    deployContract(
      name: "IRagnarokGameMaster",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRagnarokGameMaster>;
    deployContract(
      name: "Threes",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Threes>;
    deployContract(
      name: "IDoors",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IDoors>;
    deployContract(
      name: "IGame",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGame>;
    deployContract(
      name: "IRagnarokGameMaster",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRagnarokGameMaster>;
    deployContract(
      name: "Points",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Points>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
