/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  GameMaster,
  GameMasterInterface,
} from "../../contracts/GameMaster";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "gameName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "gameAddress",
        type: "address",
      },
    ],
    name: "GameRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "GameReset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "gameName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "gameAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "GameStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "playerNumber",
        type: "uint256",
      },
    ],
    name: "PlayerEliminated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    name: "PlayerNumberAssigned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PlayerRefunded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "playerNumber",
        type: "uint256",
      },
    ],
    name: "PlayerRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "players",
        type: "address[]",
      },
    ],
    name: "PlayersRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RefundFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "RegistrationClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "RegistrationFeeChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "activePlayers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "closeRegistration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "eliminatedPlayers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "gameName",
        type: "string",
      },
    ],
    name: "endExpiredGames",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "gameName",
        type: "string",
      },
    ],
    name: "endGames",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "finalPlacements",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "gameAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActivePlayerCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActivePlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActivePlayersAndNumbers",
    outputs: [
      {
        internalType: "address[]",
        name: "players",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "numbers",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEliminatedPlayerCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEliminatedPlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGames",
    outputs: [
      {
        internalType: "string[]",
        name: "gameTypes",
        type: "string[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "gameId",
            type: "uint256",
          },
          {
            internalType: "enum GameState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "currentRound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activePlayerCount",
            type: "uint256",
          },
        ],
        internalType: "struct GameInstanceInfo[][]",
        name: "gameInstances",
        type: "tuple[][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayerCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerFinalPlacement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerInfo",
    outputs: [
      {
        internalType: "string",
        name: "gameName",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "enum GameState",
        name: "gameState",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "playerNumber",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRegisteredGames",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRegisteredPlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "gameName",
        type: "string",
      },
    ],
    name: "initializeGame",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isActivePlayer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "isGameRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPlayers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "playerEliminated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerNumbers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pointsContract",
    outputs: [
      {
        internalType: "contract Points",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "register",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "gameName",
        type: "string",
      },
      {
        internalType: "address",
        name: "gameAddress",
        type: "address",
      },
    ],
    name: "registerGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "registerMe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "players",
        type: "address[]",
      },
    ],
    name: "registerPlayersBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "referralCode",
        type: "string",
      },
    ],
    name: "registerWithReferral",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "registeredGames",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "registeredPlayers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registrationClosed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registrationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resetGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxPlayers",
        type: "uint256",
      },
    ],
    name: "setMaxPlayers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_pointsContract",
        type: "address",
      },
    ],
    name: "setPointsContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "setRegistrationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "gameName",
        type: "string",
      },
    ],
    name: "startGames",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleRegistration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234608757331560715760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36103e860015567a688906bd8b00000600655612db6908161008d8239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c80631247958e1461216b57806314c44e091461214d5780631a8e2514146120cf5780631aa3a008146120065780631bc8c8a014611ea8578063288dee3b14611dc75780632b4f8a1f14611d9e5780632e7ea48a14611d6e57806339e160f114611b995780633c4f5a6614611b6e5780633ccfd60b14611aa05780634aefbbe71461177d5780634c2412a21461175f5780634e347f2a1461174157806354a7d9311461170257806355e226c7146116d5578063593284011461167557806364328b9c146115e35780636a6b27221461159c5780636e24b939146114fe57806371259638146114af578063715018a6146114555780637dc673bc1461140857806389a5b229146113dd5780638ba90d801461120c5780638da5cb5b146111e557806395754abb146111505780639a198d61146110a55780639e3c5a721461103e5780639f9a093c1461101b578063ada4a40114610fcc578063b55f108f14610f88578063b6e79c5914610ecf578063bb47221914610c44578063c04c594714610962578063c07dda4a14610929578063c2e522061461090b578063c320c72714610871578063c3c5a54714610832578063d03b547e146107b1578063d23d08a714610756578063d4e103d514610657578063e03a02881461061e578063f2fde38b14610598578063fbdb3c74146102375763fea55dad1461021757600080fd5b346102345780600319360112610234576020600a54604051908152f35b80fd5b50346102345760203660031901126102345761025161248f565b6001600160a01b038116808352600460205260408320549091906102779060ff16612d13565b818352600860205260ff60408420541615610553578283600e54905b8181106104a8575b50501561044f57818352600860205260408320805460ff19169055600a54600160401b81101561043b57906102db8260016102ff9401600a55600a61261d565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b61030e600354600a54906128d0565b6001810180911161042757818352600b6020526040832055815b60075480821015610420578261033d836125b6565b905460039190911b1c6001600160a01b03161461035d5750600101610328565b600019810190811161040c57906102db610379610391936125b6565b905460039190911b1c6001600160a01b0316916125b6565b60075480156103f857600019016103a7816125b6565b81549060018060a01b039060031b1b191690556007555b80825260096020527f6d23a3ab6e6c4048b5879c5716bb756108e4e5d37158a83ea36761c83627da5760206040842054604051908152a280f35b634e487b7160e01b83526031600452602483fd5b634e487b7160e01b84526011600452602484fd5b50506103be565b634e487b7160e01b83526011600452602483fd5b634e487b7160e01b84526041600452602484fd5b60405162461bcd60e51b815260206004820152602b60248201527f4f6e6c7920726567697374657265642067616d65732063616e20656c696d696e60448201526a61746520706c617965727360a81b6064820152608490fd5b6104b1816125e7565b50604051815488926104c282612635565b916001811690811561053c5750600114610508575b5050600c825260208160018060a01b039303019020541633146104fc57600101610293565b5050506001388061029b565b9091925088526020882088905b82821061052857505081019038806104d7565b600181602092548487015201910190610515565b60ff191684525050801515028101915038806104d7565b60405162461bcd60e51b815260206004820152601960248201527f506c6179657220616c726561647920656c696d696e61746564000000000000006044820152606490fd5b5034610234576020366003190112610234576105b261248f565b6105ba612d57565b6001600160a01b0316801561060a5781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b5034610234576020366003190112610234576020906040906001600160a01b0361064661248f565b168152600983522054604051908152f35b503461023457602036600319011261023457806004356001600160401b0381116107535761068b60209136906004016123bc565b610693612d57565b6106b360ff604051838582378581858101600d815203019020541661296f565b80604051928337600c908201908152819003820190205460405163e81de9f560e01b815292839160049183916001600160a01b03165af1908115610748578291610705575b6020826040519015158152f35b90506020813d602011610740575b81610720602093836124a5565b8101031261073c5751801515810361073c5760209150386106f8565b5080fd5b3d9150610713565b6040513d84823e3d90fd5b50fd5b503461023457806003193601126102345761076f612d57565b60055460ff8082161516809160ff19161760055561078a5780f35b7f2fc209f3df2fb10c5fcb1620d3e5f067b9ef99813ca8fa6b24de0418bdac54208180a180f35b50346102345760203660031901126102345760043590600a5482101561023457600a5482101561081e57600a81527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a89091015460405160039290921b1c6001600160a01b03168152602090f35b634e487b7160e01b81526032600452602490fd5b50346102345760203660031901126102345760209060ff906040906001600160a01b0361085d61248f565b168152600484522054166040519015158152f35b50346102345760203660031901126102345760043561088e612d57565b80156108c6576020817ffd29c2cd5dc77cf2bad34e3b80ec2592a7c16d32869ccaee99f95af250db954a92600655604051908152a180f35b60405162461bcd60e51b815260206004820152601a60248201527f466565206d7573742062652067726561746572207468616e20300000000000006044820152606490fd5b50346102345780600319360112610234576020600354604051908152f35b5034610234576020366003190112610234576020906040906001600160a01b0361095161248f565b168152600b83522054604051908152f35b5034610234578060031936011261023457600e5461097e6129c8565b90610988816129b1565b9061099660405192836124a5565b808252601f196109a5826129b1565b01845b818110610c31575050835b818110610a7e5750506109d160405192604084526040840190612436565b8281036020840152815190818152602081016020808460051b84010194019580925b848410610a005786860387f35b9091929394601f198282030184528751906020808351928381520192019084905b808210610a4057505050602097880197909594600101930191906109f3565b909192602060806001926060875180518352610a62858201518685019061255f565b6040810151604084015201516060820152019401920190610a21565b610aab6020610a98610a92849896986125e7565b5061266f565b81604051938285809451938492016123ee565b600c90820190815203019020546001600160a01b0316908382610ad7575b5060019150019391936109b3565b60405163c04c594760e01b815292839060049082905afa8015610c26578490610b1b575b60019250610b098288612a6f565b52610b148187612a6f565b5083610ac9565b50903d8085833e610b2c81836124a5565b810190602081830312610c1e578051906001600160401b038211610c22570181601f82011215610c1e57805190610b62826129b1565b92610b7060405194856124a5565b82845260208085019360071b83010191818311610c1a57602001925b828410610ba0575050505090600191610afb565b608084830312610c1a57604051608081018181106001600160401b03821117610c06576040528451815260208501516005811015610c025791816080936020809401526040870151604082015260608701516060820152815201930192610b8c565b8980fd5b634e487b7160e01b8a52604160045260248afd5b8780fd5b8480fd5b8580fd5b6040513d86823e3d90fd5b60606020828601810191909152016109a8565b5034610234578060031936011261023457610c5d612d57565b60ff60055416158015610ec4575b15610e8857805b600354811015610d225780610c88600192612602565b838060a01b0391549060031b1c1683808080600654855af1610ca86128f3565b50610cef57807faf73b0b217208b61be286bbc37095bce7eb8b9ccf617244c2f0f154e8e04e3ff6020600654604051908152a25b8352600b60205282604081205501610c72565b807f48d31f1c958cd44f1f83a52ae2dfaf61e88a1b82c07a6d5711a4abef60b6531e6020600654604051908152a2610cdc565b506003548160035580610e50575b506007548160075580610e18575b50600a5481600a5580610de0575b5060ff1960055416600555805b600354811015610db85780610d6f600192612602565b838060a01b0391549060031b1c1680845260046020526040842060ff19815416905580845260086020526040842060ff1981541690558352600960205282604081205501610d59565b507fc6976b6410888b44c765590c8368eb4a60e0431d4ad683c8a53ea85a8479f22e8180a180f35b600a8252610e12907fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a890810190612aa4565b38610d4c565b60078252610e4a907fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890810190612aa4565b38610d3e565b60038252610e82907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90810190612aa4565b38610d30565b60405162461bcd60e51b8152602060048201526014602482015273139bc81c1b185e595c9cc81d1bc81c99599d5b9960621b6044820152606490fd5b506003541515610c6b565b503461023457602036600319011261023457806004356001600160401b03811161075357610f019036906004016123bc565b610f09612d57565b610f2a60ff60405183858237602081858101600d815203019020541661296f565b80604051928337600c9082019081528190036020019020546001600160a01b0316803b1561075357818091600460405180948193636879d10f60e11b83525af1801561074857610f775750f35b81610f81916124a5565b6102345780f35b50346102345760203660031901126102345760043590600754821015610234576020610fb3836125b6565b905460405160039290921b1c6001600160a01b03168152f35b5034610234576020366003190112610234576020906040906001600160a01b03610ff461248f565b168082526004845261100b60ff8484205416612d13565b8152600983522054604051908152f35b5034610234578060031936011261023457602060ff600554166040519015158152f35b503461023457602036600319011261023457600435600e5481101561073c57611066906125e7565b9190916110915761108d6110798361266f565b604051918291602083526020830190612411565b0390f35b634e487b7160e01b81526004819052602490fd5b5034610234578060031936011261023457808060405160208101906307983f4560e21b825260976024820152602481526110e06044826124a5565b51908273dc2b0d2dd2b7759d97d50db4eabdc369731108305af16111026128f3565b501561110b5780f35b60405162461bcd60e51b815260206004820152601860248201527f4665654d20726567697374726174696f6e206661696c656400000000000000006044820152606490fd5b5034610234576020366003190112610234576004356001600160a01b0381169081900361073c5761117f612d57565b80156111a0576bffffffffffffffffffffffff60a01b600254161760025580f35b60405162461bcd60e51b815260206004820152601f60248201527f496e76616c696420506f696e747320636f6e74726163742061646472657373006044820152606490fd5b5034610234578060031936011261023457546040516001600160a01b039091168152602090f35b50602036600319011261023457806004356001600160401b038111610753576112399036906004016123bc565b9061124960ff6005541615612713565b60065490611259823410156127e7565b338452600460205261127260ff60408620541615612843565b6002546001600160a01b03169161128a831515612884565b823b15610c1e576112c39385936006604051809781968295632e8d97b760e01b8452336004850152604060248501526044840191612a83565b039304905af18015610748576113c8575b505060035433825260096020528060408320556112f033612758565b338252600460205260408220600160ff198254161790556113103361277d565b338252600860205260408220600160ff198254161790556040519081527f324cb0062138d65997c86cd3012489ceb351d602f2f55c7408306e8040c79f3f60203392a26003546001541115611392575b61136c600654346128d0565b81816113755780f35b80808061138d94335af16113876128f3565b50612923565b388180f35b600160ff1960055416176005557f2fc209f3df2fb10c5fcb1620d3e5f067b9ef99813ca8fa6b24de0418bdac54208180a1611360565b816113d2916124a5565b6102345780386112d4565b50346102345760203660031901126102345760043590600354821015610234576020610fb383612602565b5034610234578060031936011261023457611421612d57565b600160ff1960055416176005557f2fc209f3df2fb10c5fcb1620d3e5f067b9ef99813ca8fa6b24de0418bdac54208180a180f35b503461023457806003193601126102345761146e612d57565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5034610234576020366003190112610234576020906040906001600160a01b036114d761248f565b16808252600484526114ee60ff8484205416612d13565b8152600b83522054604051908152f35b50346102345780600319360112610234576007549061151c82612a3d565b91604051916115358361152e816127a2565b03846124a5565b805b8281106115685761155a8461108d8760405193849360408552604085019061237f565b908382036020850152612582565b6001906001600160a01b0361157d8287612a6f565b51168352600960205260408320546115958288612a6f565b5201611537565b50346102345760206115ad366124f7565b816115c160405192838151938492016123ee565b600c90820190815281900382019020546040516001600160a01b039091168152f35b5034610234578060031936011261023457604051600a8054808352908352909160208301917fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8915b8181106116565761108d85611642818703826124a5565b60405191829160208352602083019061237f565b82546001600160a01b031684526020909301926001928301920161162b565b5034610234576020366003190112610234576116b56116cc61169d61169861248f565b612abb565b9293949160405196879660a0885260a0880190612411565b94602087015215156040860152606085019061255f565b60808301520390f35b503461023457602060ff6116ec82610a98366124f7565b8101600d81520301902054166040519015158152f35b50346102345760203660031901126102345760209060ff906040906001600160a01b0361172d61248f565b168152600884522054166040519015158152f35b50346102345780600319360112610234576020600754604051908152f35b50346102345780600319360112610234576020600154604051908152f35b5034610234576040366003190112610234576004356001600160401b03811161073c576117ae9036906004016123bc565b6024356001600160a01b03811693929190849003611a9c576117ce612d57565b8315611a605760ff60405182848237602081848101600d8152030190205416611a1b5780156119d65760405181838237602081838101600c815203019020846bffffffffffffffffffffffff60a01b82541617905560405181838237602081838101600d815203019020600160ff19825416179055600e54600160401b81101561043b578060016118629201600e556125e7565b9490946119c2576001600160401b03821161043b576118818554612635565b601f8111611987575b508394601f8311600114611905578285967ff7757a7272e50875150e6020afe9040c7c2485f28d0513dad0f5170af4f20d4396916118fa575b508360011b906000198560031b1c19161790555b6118ee604051938493604085526040850191612a83565b9060208301520390a180f35b9050840135386118c3565b80855260208520601f19841696865b88811061196f5750847ff7757a7272e50875150e6020afe9040c7c2485f28d0513dad0f5170af4f20d43979810611955575b5050600183811b0190556118d7565b850135600019600386901b60f8161c191690553880611946565b9091602060018192858a013581550193019101611914565b6119b29086865260208620601f850160051c810191602086106119b8575b601f0160051c0190612aa4565b3861188a565b90915081906119a5565b634e487b7160e01b84526004849052602484fd5b60405162461bcd60e51b815260206004820152601960248201527f47616d65206e616d652063616e6e6f7420626520656d707479000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f47616d6520616c726561647920726567697374657265640000000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642067616d65206164647265737360601b6044820152606490fd5b8280fd5b5034610234578060031936011261023457611ab9612d57565b478015611b32578154829182918291906001600160a01b03165af1611adc6128f3565b5015611aed57602060405160018152f35b60405162461bcd60e51b815260206004820152601c60248201527f455448207472616e7366657220746f206f776e6572206661696c6564000000006044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b503461023457806003193601126102345761108d60405161164281611b92816127a2565b03826124a5565b5034610234576020366003190112610234576004356001600160401b03811161073c57611bca9036906004016123bc565b611bd2612d57565b611bf360ff60405183858237602081858101600d815203019020541661296f565b6007548015611d355760405182848237600c8184019081528190036020019020546001600160a01b031690611c2781612a3d565b90855b818110611cfe57505084823b1561023457611c759160405180938192637fbbe46f60e01b835260406004840152611c63604484016127a2565b83810360031901602485015290612582565b038183865af18015611cf357611cda575b6020857f556ae6f2a401959ea3e8f5c4035f8063eff09c11d1565ab4f369920dd9da3b36868686611cc4604051938493606085526060850191612a83565b90868301528460408301520390a1604051908152f35b611ce58580926124a5565b611cef5738611c86565b8380fd5b6040513d87823e3d90fd5b80611d0a6001926125b6565b838060a01b0391549060031b1c16885260096020526040882054611d2e8286612a6f565b5201611c2a565b60405162461bcd60e51b81526020600482015260116024820152704e6f2061637469766520706c617965727360781b6044820152606490fd5b503461023457806003193601126102345761108d611d8a6129c8565b604051918291602083526020830190612436565b50346102345780600319360112610234576002546040516001600160a01b039091168152602090f35b503461023457602036600319011261023457600435611de4612d57565b8015611e58576003548110611df95760015580f35b60405162461bcd60e51b815260206004820152603160248201527f43616e6e6f7420736574206d617820706c61796572732062656c6f77206375726044820152701c995b9d081c1b185e595c8818dbdd5b9d607a1b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f4d617820706c6179657273206d7573742062652067726561746572207468616e604482015261020360f41b6064820152608490fd5b503461023457602036600319011261023457806004356001600160401b03811161075357611edb829136906004016123bc565b611ee3612d57565b611f0460ff60405183858237602081858101600d815203019020541661296f565b80604051928337600c908201908152819003602001902054604051636cbc2ded60e01b815292839160049183916001600160a01b03165af1908115610748578291611f60575b6040516020808252819061108d9082018561237f565b90503d8083833e611f7181836124a5565b810190602081830312611a9c578051906001600160401b038211611cef57019080601f83011215611a9c57815192611fa8846129b1565b92611fb660405194856124a5565b84845260208085019560051b82010192831161073c57602001935b828510611fe65750505061108d915038611f4a565b84516001600160a01b0381168103611a9c57815260209485019401611fd1565b50806003193601126102345761202160ff6005541615612713565b600654612030813410156127e7565b338252600460205261204960ff60408420541615612843565b6002546001600160a01b0316908290612063831515612884565b823b1561073c57600660248392604051958693849263aa67c91960e01b845233600485015204905af180156120c2576120b257505060035433825260096020528060408320556112f033612758565b6120bb916124a5565b38816112d4565b50604051903d90823e3d90fd5b503461023457806003193601126102345760405160038054808352908352909160208301917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915b81811061212e5761108d85611642818703826124a5565b82546001600160a01b0316845260209093019260019283019201612117565b50346102345780600319360112610234576020600654604051908152f35b5034610234576020366003190112610234576004356001600160401b03811161073c573660238201121561073c578060040135906001600160401b038211611a9c573660248360051b83010111611a9c576121c4612d57565b6121d360ff6005541615612713565b60035482810180911161040c576001541061233a57825b8281101561232a57600581901b820160240135906001600160a01b038216808303610c225780156122ec57808652600460205260ff6040872054166122a7577f324cb0062138d65997c86cd3012489ceb351d602f2f55c7408306e8040c79f3f602060019461228660035491858b52600984528260408c205561226c81612758565b858b526004845260408b20805460ff19168917905561277d565b838952600882526040808a20805460ff19168817905551908152a2016121ea565b60405162461bcd60e51b815260206004820152601960248201527f506c6179657220616c72656164792072656769737465726564000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275496e76616c696420706c61796572206164647265737360501b6044820152606490fd5b8360035460015411156114215780f35b60405162461bcd60e51b815260206004820152601c60248201527f576f756c6420657863656564206d6178696d756d20706c6179657273000000006044820152606490fd5b906020808351928381520192019060005b81811061239d5750505090565b82516001600160a01b0316845260209384019390920191600101612390565b9181601f840112156123e9578235916001600160401b0383116123e957602083818601950101116123e957565b600080fd5b60005b8381106124015750506000910152565b81810151838201526020016123f1565b9060209161242a815180928185528580860191016123ee565b601f01601f1916010190565b9080602083519182815201916020808360051b8301019401926000915b83831061246257505050505090565b9091929394602080612480600193601f198682030187528951612411565b97019301930191939290612453565b600435906001600160a01b03821682036123e957565b90601f801991011681019081106001600160401b038211176124c657604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116124c657601f01601f191660200190565b60206003198201126123e9576004356001600160401b0381116123e957816023820112156123e95780600401359061252e826124dc565b9261253c60405194856124a5565b828452602483830101116123e95781600092602460209301838601378301015290565b90600582101561256c5752565b634e487b7160e01b600052602160045260246000fd5b906020808351928381520192019060005b8181106125a05750505090565b8251845260209384019390920191600101612593565b6007548110156125d157600760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b600e548110156125d157600e60005260206000200190600090565b6003548110156125d157600360005260206000200190600090565b80548210156125d15760005260206000200190600090565b90600182811c92168015612665575b602083101461264f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612644565b906040519182600082549261268384612635565b80845293600181169081156126f157506001146126aa575b506126a8925003836124a5565b565b90506000929192526020600020906000915b8183106126d55750509060206126a8928201013861269b565b60209193508060019154838589010152019101909184926126bc565b9050602092506126a894915060ff191682840152151560051b8201013861269b565b1561271a57565b60405162461bcd60e51b8152602060048201526016602482015275149959da5cdd1c985d1a5bdb881a5cc818db1bdcd95960521b6044820152606490fd5b60035490600160401b8210156124c6576102db8260016126a89401600355600361261d565b60075490600160401b8210156124c6576102db8260016126a89401600755600761261d565b6020600754918281520190600760005260206000209060005b8181106127c85750505090565b82546001600160a01b03168452602090930192600192830192016127bb565b156127ee57565b60405162461bcd60e51b815260206004820152602760248201527f4d7573742073656e64206174206c656173742074686520726567697374726174604482015266696f6e2066656560c81b6064820152608490fd5b1561284a57565b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b6044820152606490fd5b1561288b57565b60405162461bcd60e51b815260206004820152601760248201527f506f696e747320636f6e7472616374206e6f74207365740000000000000000006044820152606490fd5b919082039182116128dd57565b634e487b7160e01b600052601160045260246000fd5b3d1561291e573d90612904826124dc565b9161291260405193846124a5565b82523d6000602084013e565b606090565b1561292a57565b60405162461bcd60e51b815260206004820152601f60248201527f4661696c656420746f2072657475726e20657863657373207061796d656e74006044820152606490fd5b1561297657565b60405162461bcd60e51b815260206004820152601360248201527211d85b59481b9bdd081c9959da5cdd195c9959606a1b6044820152606490fd5b6001600160401b0381116124c65760051b60200190565b600e54906129d5826129b1565b916129e360405193846124a5565b808352600e60009081527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd602085015b838310612a205750505050565b600160208192612a2f8561266f565b815201920192019190612a13565b90612a47826129b1565b612a5460405191826124a5565b8281528092612a65601f19916129b1565b0190602036910137565b80518210156125d15760209160051b010190565b908060209392818452848401376000828201840152601f01601f1916010190565b818110612aaf575050565b60008155600101612aa4565b6001600160a01b031660008181526004602052604090205490919060ff1615612cf05781600052600860205260ff6040600020541690826000526009602052604060002054602091604051612b1084826124a5565b6000808252600e54909687959086805b848110612b335750505050509493929190565b612b3f610a92826125e7565b906040518251612b5281838987016123ee565b600c90820190815281900386019020546001600160a01b03169182612b7d575b506001915001612b20565b60405163773b549d60e01b815260048101869052908682602481875afa918215612cb557600092612cc1575b5081612bb6575b50612b72565b60a0602493946040519485809263047e1d5560e41b82528660048301525afa928315612cb557600093612c1c575b506060830151858111612bfb575b50839250612bb0565b939b50935096509a5090949951600581101561256c57976001388080612bf2565b60a0939193813d8211612cad575b81612c3760a093836124a5565b8101031261073c576040519160a083018381106001600160401b03821117612c99576040528151906005821015610234575090608091835288810151898401526040810151604084015260608101516060840152015160808201529138612be4565b634e487b7160e01b82526041600452602482fd5b3d9150612c2a565b6040513d6000823e3d90fd5b90918782813d8311612ce9575b612cd881836124a5565b810103126102345750519038612ba9565b503d612cce565b9050604051612d006020826124a5565b6000815290600090600090600090600090565b15612d1a57565b60405162461bcd60e51b8152602060048201526015602482015274141b185e595c881b9bdd081c9959da5cdd195c9959605a1b6044820152606490fd5b6000546001600160a01b03163303612d6b57565b63118cdaa760e01b6000523360045260246000fdfea264697066735822122013e58eed5b956e430550798bd9b534003dc106abb2150cd6645bbec5185272cd64736f6c634300081c0033";

type GameMasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameMasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameMaster__factory extends ContractFactory {
  constructor(...args: GameMasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GameMaster & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GameMaster__factory {
    return super.connect(runner) as GameMaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameMasterInterface {
    return new Interface(_abi) as GameMasterInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): GameMaster {
    return new Contract(address, _abi, runner) as unknown as GameMaster;
  }
}
