/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  MorseReceiver,
  MorseReceiverInterface,
} from "../../../../../contracts/hackathon/morse/MorseReceiver.sol/MorseReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_challenge",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "authorize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "challenge",
    outputs: [
      {
        internalType: "contract IMorse",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c03461009f57601f61056438819003918201601f19168301916001600160401b038311848410176100a457808492604094855283398101031261009f57610052602061004b836100ba565b92016100ba565b6080919091526001600160a01b031660a05260405161049590816100cf8239608051818181605c0152818161015f0152610283015260a051818181608d0152818161011901526101de0152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361009f5756fe6080806040526004361015610011575b005b600090813560e01c9081638da5cb5b1461026f57508063ababa4a714610148578063d2ef7398146101035763f4b7095b0361000f57346100f257806003193601126100f25761008a337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146102b6565b807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156101005781809160046040518094819363088fa68560e11b83525af180156100f5576100e15750f35b816100eb916102ee565b6100f25780f35b80fd5b6040513d84823e3d90fd5b50fd5b50346100f257806003193601126100f2576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50346100f257806003193601126100f25761018d337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316146102b6565b60405190610139918281019281841067ffffffffffffffff85111761025b57829382916103278339039082f0801561024e576001600160a01b0316803b15610100576040516348a40edb60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660048201526001650fffffff000160c01b03196024820152306044820152919081908390606490829084905af1801561024e576102405780f35b610249916102ee565b388180f35b50604051903d90823e3d90fd5b634e487b7160e01b83526041600452602483fd5b9050346102b257816003193601126102b2577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b156102bd57565b60405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606490fd5b90601f8019910116810190811067ffffffffffffffff82111761031057604052565b634e487b7160e01b600052604160045260246000fdfe6080806040523460155761011e908161001b8239f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c6348a40edb14602857600080fd5b3460e457606036600319011260e457816004356001600160a01b0381169081900360e4576024359067ffffffffffffffff60c01b821680920360e0576044356001600160a01b0381169081900360dc57813b1560dc578360449286949285936319c7391960e21b8552600485015260248401525af1801560d15760a9575080f35b67ffffffffffffffff811160bd5760405280f35b634e487b7160e01b82526041600452602482fd5b6040513d84823e3d90fd5b8380fd5b8280fd5b5080fdfea26469706673582212201b25cb97e92bf7d326f382a24badfa05c8c966fd55cde0549069a41c3a1efced64736f6c634300081c0033a2646970667358221220d2dc238df7ccca15fef2333950fe44edc25e57bb04ef9872c4b0c09ecc10868864736f6c634300081c0033";

type MorseReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MorseReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MorseReceiver__factory extends ContractFactory {
  constructor(...args: MorseReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    _challenge: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, _challenge, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    _challenge: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, _challenge, overrides || {}) as Promise<
      MorseReceiver & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MorseReceiver__factory {
    return super.connect(runner) as MorseReceiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MorseReceiverInterface {
    return new Interface(_abi) as MorseReceiverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MorseReceiver {
    return new Contract(address, _abi, runner) as unknown as MorseReceiver;
  }
}
