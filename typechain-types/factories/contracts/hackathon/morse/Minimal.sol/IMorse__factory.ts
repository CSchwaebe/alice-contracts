/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IMorse,
  IMorseInterface,
} from "../../../../../contracts/hackathon/morse/Minimal.sol/IMorse";

const _abi = [
  {
    inputs: [],
    name: "z5",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMorse__factory {
  static readonly abi = _abi;
  static createInterface(): IMorseInterface {
    return new Interface(_abi) as IMorseInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IMorse {
    return new Contract(address, _abi, runner) as unknown as IMorse;
  }
}
