/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  MorseSimple,
  MorseSimpleInterface,
} from "../../../../../contracts/hackathon/morse/MorseSimple.sol/MorseSimple";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "challenge",
        type: "address",
      },
    ],
    name: "exploit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610161908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b6000803560e01c630aeb4ddf1461002957600080fd5b346100ce5760203660031901126100ce576004356001600160a01b03811692908390036100ef57823b156100ef576319c7391960e21b81526001650fffffff000160c01b03196004820152326024820152818160448183875af180156100d1576100df575b508181923b156100dc5781809160046040518094819363088fa68560e11b83525af180156100d1576100bd5750f35b816100c7916100f3565b6100ce5780f35b80fd5b6040513d84823e3d90fd5b50fd5b816100e9916100f3565b3861008e565b5080fd5b90601f8019910116810190811067ffffffffffffffff82111761011557604052565b634e487b7160e01b600052604160045260246000fdfea264697066735822122071f39ceea03931f1fec28c0877f5d9bc59a6bf1585da1c0777f05d2515b0979164736f6c634300081c0033";

type MorseSimpleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MorseSimpleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MorseSimple__factory extends ContractFactory {
  constructor(...args: MorseSimpleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MorseSimple & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MorseSimple__factory {
    return super.connect(runner) as MorseSimple__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MorseSimpleInterface {
    return new Interface(_abi) as MorseSimpleInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MorseSimple {
    return new Contract(address, _abi, runner) as unknown as MorseSimple;
  }
}
