/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  MorseDestruct,
  MorseDestructInterface,
} from "../../../../../contracts/hackathon/morse/MorseDestruct.sol/MorseDestruct";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_challenge",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "authorizeAndDestruct",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "authorizeOnly",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "challenge",
    outputs: [
      {
        internalType: "contract IMorse",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c03461009f57601f6105d638819003918201601f19168301916001600160401b038311848410176100a457808492604094855283398101031261009f57610052602061004b836100ba565b92016100ba565b6080919091526001600160a01b031660a05260405161050790816100cf823960805181818160680152818161018f015261029e015260a05181818160f00152818161021901526102e30152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361009f5756fe60806040526004361015610015575b3661038e57005b60003560e01c80632451de941461005557806384c1ce8f146100505780638da5cb5b1461004b5763d2ef73980361000e576102cd565b610288565b61017c565b34610167576000366003190112610167577f000000000000000000000000000000000000000000000000000000000000000061009b336001600160a01b03831614610312565b60405161013980820182811067ffffffffffffffff82111761016c578291610399833903906000f08015610162576001600160a01b0316803b15610167576040516348a40edb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526001650fffffff000160c01b0319602483015283166044820152906000908290606490829084905af180156101625761014b57005b8061015a60006101609361036c565b80610171565b005b610360565b600080fd5b61034a565b600091031261016757565b34610167576000366003190112610167577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b038116906101c4338314610312565b60405161013980820182811067ffffffffffffffff82111761016c578291610399833903906000f08015610162576001600160a01b0316803b15610167576040516348a40edb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526001650fffffff000160c01b03196024830152909216604483015260009082908183816064810103925af18015610162576102775750ff5b8061015a60006102869361036c565bff5b34610167576000366003190112610167576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610167576000366003190112610167576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b1561031957565b60405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606490fd5b634e487b7160e01b600052604160045260246000fd5b6040513d6000823e3d90fd5b90601f8019910116810190811067ffffffffffffffff82111761016c57604052565b3360005260206000f3fe6080806040523460155761011e908161001b8239f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c6348a40edb14602857600080fd5b3460e457606036600319011260e457816004356001600160a01b0381169081900360e4576024359067ffffffffffffffff60c01b821680920360e0576044356001600160a01b0381169081900360dc57813b1560dc578360449286949285936319c7391960e21b8552600485015260248401525af1801560d15760a9575080f35b67ffffffffffffffff811160bd5760405280f35b634e487b7160e01b82526041600452602482fd5b6040513d84823e3d90fd5b8380fd5b8280fd5b5080fdfea26469706673582212200869760d6d799b7feeaf1f3bcf03935d8cccb5430e5fc19ca0ffb8e59188fa7e64736f6c634300081c0033a2646970667358221220b2595cfecd758793f2063319a5c4a567092b4ce5502fe79ec2242afab1c8bdf664736f6c634300081c0033";

type MorseDestructConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MorseDestructConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MorseDestruct__factory extends ContractFactory {
  constructor(...args: MorseDestructConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    _challenge: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, _challenge, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    _challenge: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, _challenge, overrides || {}) as Promise<
      MorseDestruct & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MorseDestruct__factory {
    return super.connect(runner) as MorseDestruct__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MorseDestructInterface {
    return new Interface(_abi) as MorseDestructInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MorseDestruct {
    return new Contract(address, _abi, runner) as unknown as MorseDestruct;
  }
}
