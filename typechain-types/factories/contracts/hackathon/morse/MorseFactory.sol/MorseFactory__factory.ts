/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  MorseFactory,
  MorseFactoryInterface,
} from "../../../../../contracts/hackathon/morse/MorseFactory.sol/MorseFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_challenge",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "authorized",
        type: "address",
      },
    ],
    name: "AuthorizationComplete",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "CallerDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "CallingZ5",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ExploitStarted",
    type: "event",
  },
  {
    inputs: [],
    name: "challenge",
    outputs: [
      {
        internalType: "contract IMorse",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "exploit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c03461009057601f61078638819003918201601f19168301916001600160401b0383118484101761009557808492604094855283398101031261009057610052602061004b836100ab565b92016100ab565b6080919091526001600160a01b031660a0526040516106c690816100c08239608051818181609f015260e1015260a051818181605701526101610152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100905756fe608080604052600436101561001357600080fd5b600090813560e01c90816363d9b770146100ce575080638da5cb5b146100895763d2ef73981461004257600080fd5b346100865780600319360112610086576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b80fd5b50346100865780600319360112610086576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b82346100865780600319360112610086577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316913383900361033f5750604051827fa635a5f4624070e30faa6a539cbf69cf2481c6b484d70ece9e7ad28330ff4f348380a26102eb8082019082821067ffffffffffffffff83111761032b5760409183916103a683397f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316808252602082019690965203019082f0801561031e57604051906001600160a01b0316807faa6a1a208b548ffe73248d4545a29e5daf979016e0f696cdcf690ed38ac69e0a8480a2803b1561031a578160048185809463ababa4a760e01b83525af180156102ac5761030a575b5080916040519063863b996560e01b8252602082600481845afa9182156102ff5783926102bb575b50604051916001600160a01b03167f9540908f4039adfa4b712b56910dbe71111fb0c9cea93cfd1f73648fbeb022cc8480a27ff657b917cb1c846adb8222db701bead135b1538c1de8484988e9522d62fba2178380a1803b156102b7578160048185809463088fa68560e11b83525af180156102ac5761029b5750f35b816102a59161036d565b6100865780f35b6040513d84823e3d90fd5b5050fd5b9091506020813d6020116102f7575b816102d76020938361036d565b810103126102b757516001600160a01b03811681036102b757908461021e565b3d91506102ca565b6040513d85823e3d90fd5b816103149161036d565b826101f6565b8280fd5b50604051903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b62461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b6044820152606490fd5b90601f8019910116810190811067ffffffffffffffff82111761038f57604052565b634e487b7160e01b600052604160045260246000fdfe60c0346100bf57601f6102eb38819003918201601f19168301916001600160401b038311848410176100c45780849260409485528339810103126100bf578051906001600160a01b03821682036100bf57602001516001600160a01b038116918282036100bf5760805260a05260405190307f10d660589785cdd088a212af057e6c80f35f899fc63b120ebaaade5655798cab600080a361021090816100db8239608051818181609f0152610133015260a0518181816057015260e30152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c908163ababa4a7146100ce57508063d2ef7398146100895763d4b839921461004257600080fd5b346100865780600319360112610086576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b80fd5b50346100865780600319360112610086576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9050346101d657816003193601126101d657817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031680307f2545b9ff3d5499a94f13afe40083242e0548a59537b0e2fb9f39c78d225dda1d8480a37f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690813b156101d2576319c7391960e21b84526001650fffffff000160c01b0319600485015260248401528290604490829084905af180156101c75761019e575080f35b67ffffffffffffffff81116101b35760405280f35b634e487b7160e01b82526041600452602482fd5b6040513d84823e3d90fd5b8280fd5b5080fdfea26469706673582212207f752e743924ab8f192eca9726564d2af99af627991e8bb4b986bd281c9dd72164736f6c634300081c0033a2646970667358221220366043f6fca9baaba7d01dca27591b112ea87bdd872eec805bb009455f08a44a64736f6c634300081c0033";

type MorseFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MorseFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MorseFactory__factory extends ContractFactory {
  constructor(...args: MorseFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    _challenge: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, _challenge, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    _challenge: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, _challenge, overrides || {}) as Promise<
      MorseFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MorseFactory__factory {
    return super.connect(runner) as MorseFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MorseFactoryInterface {
    return new Interface(_abi) as MorseFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MorseFactory {
    return new Contract(address, _abi, runner) as unknown as MorseFactory;
  }
}
