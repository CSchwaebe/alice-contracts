/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  FinalExploit,
  FinalExploitInterface,
} from "../../../../../contracts/hackathon/morse/FinalExploit.sol/FinalExploit";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "challenge",
        type: "address",
      },
    ],
    name: "exploit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346015576102fc908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b6000803560e01c630aeb4ddf1461002957600080fd5b3461010f57602036600319011261010f576004356001600160a01b0381169290839003610141576101288082019082821067ffffffffffffffff8311176101525790829161019f8339039082f08015610145576001600160a01b0316823b15610141576040516319c7391960e21b81526001650fffffff000160c01b031960048201526024810182905292828460448183855af1801561013657610121575b829350813b1561011d5782916024839260405194859384926302821bf960e41b845260048401525af18015610112576100fe5750f35b8161010891610166565b61010f5780f35b80fd5b6040513d84823e3d90fd5b5050fd5b9190928161012e91610166565b9082906100c8565b6040513d85823e3d90fd5b5080fd5b50604051903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b90601f8019910116810190811067ffffffffffffffff82111761018857604052565b634e487b7160e01b600052604160045260246000fdfe6080806040523460155761010d908161001b8239f35b600080fdfe6080806040526004361015601257600080fd5b600090813560e01c908163209652551460ba5750632821bf9014603457600080fd5b3460b757602036600319011260b757806004356001600160a01b0381169081900360b457803b1560b457819060046040518094819363088fa68560e11b83525af1801560a9576081575080f35b67ffffffffffffffff811160955760405280f35b634e487b7160e01b82526041600452602482fd5b6040513d84823e3d90fd5b50fd5b80fd5b90503460d3578160031936011260d35780602a60209252f35b5080fdfea26469706673582212204daadb10f3c68c642868ad5fe21b356fae503177778420d4d761e0da090c5bd864736f6c634300081c0033a264697066735822122033095330e053aa1004db306405d86f90f666de118056db4f6f64849a6d509fce64736f6c634300081c0033";

type FinalExploitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FinalExploitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FinalExploit__factory extends ContractFactory {
  constructor(...args: FinalExploitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      FinalExploit & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FinalExploit__factory {
    return super.connect(runner) as FinalExploit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FinalExploitInterface {
    return new Interface(_abi) as FinalExploitInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): FinalExploit {
    return new Contract(address, _abi, runner) as unknown as FinalExploit;
  }
}
