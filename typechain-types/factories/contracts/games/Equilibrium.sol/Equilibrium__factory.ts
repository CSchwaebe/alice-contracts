/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Equilibrium,
  EquilibriumInterface,
} from "../../../../contracts/games/Equilibrium.sol/Equilibrium";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "winners",
        type: "address[]",
      },
    ],
    name: "GameCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "players",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "playerNumbers",
        type: "uint256[]",
      },
    ],
    name: "GameInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newGameMaster",
        type: "address",
      },
    ],
    name: "GameMasterChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "GameStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "playerNumber",
        type: "uint256",
      },
    ],
    name: "PlayerEliminated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "fromTeam",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "toTeam",
        type: "uint8",
      },
    ],
    name: "PlayerSwitchedTeam",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "team",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "teamSize",
        type: "uint256",
      },
    ],
    name: "TeamEliminated",
    type: "event",
  },
  {
    inputs: [],
    name: "endExpiredGames",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endGame",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gameIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameMaster",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActivePlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getGameInfo",
    outputs: [
      {
        components: [
          {
            internalType: "enum GameState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "currentRound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "roundEndTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameStartTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameEndTime",
            type: "uint256",
          },
        ],
        internalType: "struct IGame.GameInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGameName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getGameState",
    outputs: [
      {
        internalType: "enum GameState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGames",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gameId",
            type: "uint256",
          },
          {
            internalType: "enum GameState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "currentRound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activePlayerCount",
            type: "uint256",
          },
        ],
        internalType: "struct GameInstanceInfo[]",
        name: "gamesInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerGameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getPlayerInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "playerAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "playerNumber",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "team",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct Equilibrium.EquilibriumPlayerInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerTeam",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "team",
        type: "uint8",
      },
    ],
    name: "getTeamSize",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_players",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_playerNumbers",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isPlayerInGame",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerGameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newGameMaster",
        type: "address",
      },
    ],
    name: "setGameMaster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startGames",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "team",
        type: "uint8",
      },
    ],
    name: "switchTeam",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234608757331560715760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180546001600160a01b03191633179055611a31908161008d8239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c9081631bb412d6146111a95750806325b05c8814610b8f5780632f07ba5814610f9a5780633532804d14610eff5780633c4f5a6614610ec65780634294b98414610e2857806347e1d55014610d4e578063574a5b2014610d0f57806365c7e4e514610c9b5780636cbc2ded14610c22578063715018a614610bc9578063773b549d14610b8f5780637fbbe46f146107bb5780638b5b9ccc1461076b5780638da5cb5b14610742578063bbda33d914610697578063bdf84ae71461066e578063c04c59471461050e578063c2e9492714610453578063d0f3a21e146103e3578063e81de9f5146103a9578063ea17532e14610209578063f2fde38b146101805763ffde0c741461012757600080fd5b3461017b57602036600319011261017b576004358015158061016f575b61014d906112cf565b6000526003602052602060ff6040600020541661016d6040518092611233565bf35b50600254811115610144565b600080fd5b3461017b57602036600319011261017b576101996111c4565b6101a16119d2565b6001600160a01b031680156101f357600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b3461017b57602036600319011261017b576004358015158061039d575b61022f906112cf565b600052600360205260406000206004810180549061024c826114cf565b9261025a60405194856113c9565b828452601f19610269846114cf565b0160005b818110610386575050600060068201926008600984019301915b858110610301578660405180916020820160208352815180915260206040840192019060005b8181106102bb575050500390f35b919350916020608060019260608751858060a01b038151168352848101518584015260ff60408201511660408401520151151560608201520194019101918493926102ad565b8061030e60019284611469565b905460a084901b84900360039290921b1c16600081815260208881526040808320548983528184205492899052928190205490519360ff918216939190921691610357856113ad565b84526020840152604083015215156060820152610374828a61150c565b5261037f818961150c565b5001610287565b6020906103916114e7565b8282890101520161026d565b50600254811115610226565b3461017b57600036600319011261017b576103cf60018060a01b036001541633146113f7565b60206103d9611520565b6040519015158152f35b3461017b57600036600319011261017b57600254806000526003602052604060002060ff815416600581101561043d57600214908161042f575b5061042457005b61042d906115af565b005b60039150015442118261041d565b634e487b7160e01b600052602160045260246000fd5b3461017b57602036600319011261017b5761046c6111c4565b6104746119d2565b6001600160a01b031680156104c9576020817f63860f6674590a6969c4fe1dc738a9c8f955407c09e6c67a6bdb818f4c35cd8a926bffffffffffffffffffffffff60a01b6001541617600155604051908152a1005b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c69642047616d654d617374657220616464726573730000000000006044820152606490fd5b3461017b57600036600319011261017b5760025461052b816114cf565b9061053960405192836113c9565b808252601f19610548826114cf565b0160005b81811061065757505060015b818111156105cf578260405180916020820160208352815180915260206040840192019060005b81811061058d575050500390f35b919350916020608060019260608751805183526105b08582015186850190611233565b604081015160408401520151606082015201940191019184939261057f565b806000526003602052604060002090600760ff835416920154610604604051936105f8856113ad565b838552602085016113eb565b60016040840152606083015260001981019181831161064157826106369161062f61063c958861150c565b528561150c565b506112c0565b610558565b634e487b7160e01b600052601160045260246000fd5b6020906106626114e7565b8282870101520161054c565b3461017b57600036600319011261017b576001546040516001600160a01b039091168152602090f35b3461017b57600036600319011261017b576040516040810181811067ffffffffffffffff82111761072c57604052600b81526a457175696c69627269756d60a81b602082015260405190602082528181519182602083015260005b8381106107145750508160006040809484010152601f80199101168101030190f35b602082820181015160408784010152859350016106f2565b634e487b7160e01b600052604160045260246000fd5b3461017b57600036600319011261017b576000546040516001600160a01b039091168152602090f35b3461017b57600036600319011261017b5760025460005260036020526107b76107a46107ab60046040600020016040519283809261134e565b03826113c9565b604051918291826111f0565b0390f35b3461017b57604036600319011261017b5760043567ffffffffffffffff811161017b576107ec903690600401611240565b9060243567ffffffffffffffff811161017b5761080d903690600401611240565b909261082460018060a01b036001541633146113f7565b8015610b5457818103610b0f5760028110610aca576108446002546112c0565b9283600255836000526003602052604060002093600160ff1986541617855542600186015560009460048101956007820191600a8101926006820160058301976009600885019401945b8181106108fe578c8c8c6108ad6040519260408452604084019061134e565b8281036020840152818152906001600160fb1b03811161017b577fb66ba8feaec509998ef3217bc97fbf1a0f906b89fac25a4ace8ddff059a41f1293602092849260051b80928583013701030190a1005b61090981838b611443565b35906001600160a01b03821680830361017b578015610a8c578b8f8f908f9184600052600560205260ff604060002054166109f4575b9261095d86889460409461095860019b61098499611481565b611443565b358260008781528b6020522055600090858252602052208560ff1982541617905587611481565b6040600082815288602052208360ff1982541617905560406000828152896020522060ff198154169055600080528860205260406000206109c581546112c0565b905580600052600460205289604060002055600052600560205260406000208260ff198254161790550161088e565b505050508060005260046020526040600020548015908115610a67575b5015610a22578b8f8f908f9161093f565b60405162461bcd60e51b815260206004820152601d60248201527f506c6179657220616c726561647920696e206163746976652067616d650000006044820152606490fd5b9050600052600360205260ff60406000205416600581101561043d5760041438610a11565b60405162461bcd60e51b8152602060048201526016602482015275496e76616c696420706c61796572206164647265737360501b6044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f4e656564206174206c65617374203220706c61796572730000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f4172726179206c656e67746873206d757374206d6174636800000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272139bc81c1b185e595c9cc81c1c9bdd9a591959606a1b6044820152606490fd5b3461017b57602036600319011261017b576001600160a01b03610bb06111c4565b1660005260046020526020604060002054604051908152f35b3461017b57600036600319011261017b57610be26119d2565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461017b57600036600319011261017b57610c4860018060a01b036001541633146113f7565b60025480600052600360205260406000209060ff825416600581101561043d576107b79260079260026107ab9314610c8c575b506107a4604051809481930161134e565b610c95906115af565b84610c7b565b3461017b57604036600319011261017b576004356024359060ff821680920361017b5780151580610d03575b610cd0906112cf565b610cdc60048310611271565b6000526003602052600a604060002001906000526020526020604060002054604051908152f35b50600254811115610cc7565b3461017b57602036600319011261017b576001600160a01b03610d306111c4565b166000526005602052602060ff604060002054166040519015158152f35b3461017b57602036600319011261017b5760043560006080604051610d7281611391565b828152826020820152826040820152826060820152015280151580610e1c575b610d9b906112cf565b600052600360205260a0604060002060ff815416906003810154906002600182015491015491610dd760405194610dd186611391565b856113eb565b6020840160018152604085019182526060850192835260808501938452610e02604051809651611233565b516020850152516040840152516060830152516080820152f35b50600254811115610d92565b3461017b57604036600319011261017b57600435610e446111da565b9080151580610eba575b610e57906112cf565b806000526003602052600560406000200160018060a01b038316600052602052610e8860ff6040600020541661130d565b600052600360205260096040600020019060018060a01b0316600052602052602060ff60406000205416604051908152f35b50600254811115610e4e565b3461017b57600036600319011261017b5760025460005260036020526107b76107a46107ab60076040600020016040519283809261134e565b3461017b57604036600319011261017b57600435610f1b6111da565b9080151580610f8e575b610f2e906112cf565b806000526003602052600560406000200160018060a01b038316600052602052610f5f60ff6040600020541661130d565b600052600360205260066040600020019060018060a01b03166000526020526020604060002054604051908152f35b50600254811115610f25565b3461017b57602036600319011261017b5760043560ff811680910361017b5733600052600560205260ff604060002054161561116b57610fdc60048210611271565b33600052600460205260406000205480600052600360205260406000209160ff835416600581101561043d5760020361113457600383015442116110fe5733600090815260098401602081905260409091205460ff16938285146110c257600a0160ff851660005280602052604060002061105781546112b3565b905582600052602052604060002061106f81546112c0565b905560018060a01b03331660005260205260406000208160ff1982541617905560405192835260208301527fe6e5fc6e2975ffc9ef7e3c2c7e29d0d370446c8daa529eef4b6ff1cd2da1f19360403393a3005b60405162461bcd60e51b8152602060048201526014602482015273416c7265616479206f6e2074686973207465616d60601b6044820152606490fd5b60405162461bcd60e51b815260206004820152600e60248201526d11d85b59481a185cc8195b99195960921b6044820152606490fd5b60405162461bcd60e51b815260206004820152600f60248201526e47616d65206e6f742061637469766560881b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275506c61796572206e6f7420696e20616e792067616d6560501b6044820152606490fd5b3461017b57600036600319011261017b576020906002548152f35b600435906001600160a01b038216820361017b57565b602435906001600160a01b038216820361017b57565b602060408183019282815284518094520192019060005b8181106112145750505090565b82516001600160a01b0316845260209384019390920191600101611207565b90600582101561043d5752565b9181601f8401121561017b5782359167ffffffffffffffff831161017b576020808501948460051b01011161017b57565b1561127857565b60405162461bcd60e51b815260206004820152601360248201527224b73b30b634b2103a32b0b690373ab6b132b960691b6044820152606490fd5b8015610641576000190190565b60001981146106415760010190565b156112d657565b60405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590819d85b59481251608a1b6044820152606490fd5b1561131457565b60405162461bcd60e51b8152602060048201526012602482015271506c61796572206e6f7420696e2067616d6560701b6044820152606490fd5b906020825491828152019160005260206000209060005b8181106113725750505090565b82546001600160a01b0316845260209093019260019283019201611365565b60a0810190811067ffffffffffffffff82111761072c57604052565b6080810190811067ffffffffffffffff82111761072c57604052565b90601f8019910116810190811067ffffffffffffffff82111761072c57604052565b600582101561043d5752565b156113fe57565b60405162461bcd60e51b815260206004820152601860248201527f4f6e6c792047616d654d61737465722063616e2063616c6c00000000000000006044820152606490fd5b91908110156114535760051b0190565b634e487b7160e01b600052603260045260246000fd5b80548210156114535760005260206000200190600090565b908154916801000000000000000083101561072c57826114a99160016114cd95018155611469565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b565b67ffffffffffffffff811161072c5760051b60200190565b604051906114f4826113ad565b60006060838281528260208201528260408201520152565b80518210156114535760209160051b010190565b6002546000526003602052604060002060ff815416600581101561043d57600114806115a2575b6115515750600090565b600260ff19825416178155610258420190814211610641576003829101557fa2dfaa3573b86004ec9d4d4abe5068d942579c59da4da8cd0d9e45e71a393bc1602060025492604051908152a2600190565b5060078101541515611547565b8060005260036020526040600020600090600a8101918080528260205260408120549260015b600460ff82161061198b575050600782019283546115f2816114cf565b6115ff60405191826113c9565b818152601f1961160e836114cf565b0136602083013760009160098601835b82811061192e57505050906000905b8082106116bb5750505091847fe41d6b13e5cba3ff95cceafbe365ee1bc0e88b7b44d6dfc4c99ebe6c8024c41960407fa7690f576eaef889ef9ef29d1eaee6c0e3b073108b66bb8009ec8af6428bb34596946116b69660ff8351921682526020820152a2600460ff1982541617815560024291015560405191829160208352602083019061134e565b0390a2565b92979196909593949093906001600160a01b036116d8888a61150c565b51169585600052600360205260406000209960088b0160ff6040600060018060a01b038c16815283602052205416156118f557604090818d600a60ff9a9e9a838e60009060018060a01b03168152600985016020522054169160ff600093168352016020522061174881546112b3565b905560009060018060a01b038b1682526020522060ff198154169055876000526005602052604060002060ff1981541690558760005260046020526000604081205560009960078c019a5b8b54808210156118e2578a6117a8838f611469565b905460039190911b1c6001600160a01b0316146117c85750600101611793565b9060009d959a9398969b94999c92979d198201918211610641576114a96117f261180b9385611469565b905460039190911b1c6001600160a01b03169184611469565b805480156118cc5760001901906118228282611469565b81549060018060a01b039060031b1b19169055555b6001546001600160a01b031692833b1561017b577f51479c93d7646904d2282e9e79cddf11999ac774b7fd0289e2f59cb4ad0f086a602060408d936000806001996024855180948193633ef6cf1d60e21b83528c60048401525af16118bb575b506006600091898060a01b03881683520183522054604051908152a301909161162d565b60006118c6916113c9565b38611897565b634e487b7160e01b600052603160045260246000fd5b5050949a92979095939891969950611837565b60405162461bcd60e51b8152602060048201526011602482015270506c61796572206e6f742061637469766560781b6044820152606490fd5b8061193b6001928b611469565b838060a01b0391549060031b1c1660ff60406000858060a01b03841681528660205220541660ff8a1614611971575b500161161e565b61198461197d886112c0565b978761150c565b523861196a565b846040600060ff84168152846020522054116119b5575b60ff1660ff8114610641576001016115d5565b60ff811660009081526020839052604090205494509150816119a2565b6000546001600160a01b031633036119e657565b63118cdaa760e01b6000523360045260246000fdfea264697066735822122042377c930a7a2dcf0606424cc959c0e94128fe5f2c97b84f8252b7b5a4cb3a1c64736f6c634300081c0033";

type EquilibriumConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EquilibriumConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Equilibrium__factory extends ContractFactory {
  constructor(...args: EquilibriumConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Equilibrium & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Equilibrium__factory {
    return super.connect(runner) as Equilibrium__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EquilibriumInterface {
    return new Interface(_abi) as EquilibriumInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Equilibrium {
    return new Contract(address, _abi, runner) as unknown as Equilibrium;
  }
}
