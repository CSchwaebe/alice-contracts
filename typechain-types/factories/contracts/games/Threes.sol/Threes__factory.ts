/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Threes,
  ThreesInterface,
} from "../../../../contracts/games/Threes.sol/Threes";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "winners",
        type: "address[]",
      },
    ],
    name: "GameCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "players",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "playerNumbers",
        type: "uint256[]",
      },
    ],
    name: "GameInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newGameMaster",
        type: "address",
      },
    ],
    name: "GameMasterChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerCommitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "playerNumber",
        type: "uint256",
      },
    ],
    name: "PlayerEliminated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "choice",
        type: "uint256",
      },
    ],
    name: "PlayerRevealed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "roundNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "RoundStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "commitChoice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endExpiredGames",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endGame",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gameIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameMaster",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActivePlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getCurrentRound",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getGameInfo",
    outputs: [
      {
        components: [
          {
            internalType: "enum GameState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "currentRound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "roundEndTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameStartTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameEndTime",
            type: "uint256",
          },
        ],
        internalType: "struct IGame.GameInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGameName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getGameState",
    outputs: [
      {
        internalType: "enum GameState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGames",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gameId",
            type: "uint256",
          },
          {
            internalType: "enum GameState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "currentRound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activePlayerCount",
            type: "uint256",
          },
        ],
        internalType: "struct GameInstanceInfo[]",
        name: "gamesInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerGameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getPlayerInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "playerAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "playerNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasCommitted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasRevealed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct Threes.ThreesPlayerInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getRoundEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "hasPlayerCommitted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "hasPlayerRevealed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_players",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_playerNumbers",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isPlayerInGame",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerGameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "choice",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "revealChoice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newGameMaster",
        type: "address",
      },
    ],
    name: "setGameMaster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startGames",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234608757331560715760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180546001600160a01b0319163317905561242b908161008d8239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806312b19a131461150b578063148b02c5146114be5780631bb412d6146114a057806325b05c88146110c95780633532804d146113ce5780633c4f5a66146112f157806347e1d55014611231578063574a5b20146111f25780636cbc2ded1461115c578063715018a614611103578063773b549d146110c95780637fbbe46f14610c9457806384cd7d3314610c255780638b5b9ccc14610b305780638c10bb9614610b115780638da5cb5b14610ae8578063bbda33d914610a42578063bdf84ae714610a19578063c04c5947146108b4578063c2e94927146107f9578063d0f3a21e14610732578063d216b62b146106c3578063e05b10c0146104ff578063e81de9f5146103ea578063ea17532e14610227578063f2fde38b1461019e5763ffde0c741461014557600080fd5b34610199576020366003190112610199576004358015158061018d575b61016b90611605565b6000526003602052602060ff6040600020541661018b60405180926115c7565bf35b50600254811115610162565b600080fd5b34610199576020366003190112610199576101b7611558565b6101bf611fd0565b6001600160a01b0316801561021157600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b3461019957602036600319011261019957600435801515806103de575b61024d90611605565b60005260036020526040600020600581019081549061026b826116b9565b926102796040519485611697565b828452601f19610288846116b9565b0160005b8181106103c757505060006007830192600c8101926009600d83019201925b86811061032f578760405180916020820160208352815180915260206040840192019060005b8181106102df575050500390f35b91935091602060a0600192608087518580851b03815116835284810151858401526040810151151560408401526060810151151560608401520151151560808201520194019101918493926102d1565b8061033c60019284611803565b905460039190911b1c60a083901b83900316600081815260208981526040808320548a83528184205489845282852054938b9052938290205491519460ff92831694938316939092169161038f8661165f565b855260208501521515604084015215156060830152151560808201526103b5828b611746565b526103c0818a611746565b50016102ab565b6020906103d2611770565b8282890101520161028c565b50600254811115610244565b346101995760003660031901126101995761041060018060a01b036001541633146117a7565b6001805b60025481116104f25780600052600360205260406000209060ff82541660058110156104dc57600114806104cf575b156104c157600260ff1983541617825560018083015561012c4201918242116104ab577fa359b664a68acd8839e42112eb50eff3408165e15074fde89ddb58a0db2e691d6040846104a695600286950155815190600182526020820152a2611643565b610414565b634e487b7160e01b600052601160045260246000fd5b9150506104a6600091611643565b5060088201541515610443565b634e487b7160e01b600052602160045260246000fd5b6020826040519015158152f35b346101995760203660031901126101995733600052600560205261052a60ff60406000205416611869565b336000526004602052604060002054806000526003602052604060002060ff81541660058110156104dc57600261056191146118ae565b600181016105726001825414611c1d565b60028201908154421161068857336000908152600c8401602081905260409091205460ff1661064f57336000908152600a850160209081526040808320600435905592905220805460ff19166001179055600e830180546105d290611643565b80915560086040519433877f2e6ed0cae7a81e1893017dfafd5fbaf8594adcc50ff27b5f8eb70e0e90acf315600080a301541461060b57005b6002905561012c4201918242116104ab57827fa359b664a68acd8839e42112eb50eff3408165e15074fde89ddb58a0db2e691d9360409355600282526020820152a2005b60405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e4818dbdb5b5a5d1d1959607a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601360248201527210dbdb5b5a5d081c195c9a5bd908195b991959606a1b6044820152606490fd5b34610199576040366003190112610199576004356106df61156e565b9080151580610726575b6106f290611605565b6000526003602052600d6040600020019060018060a01b0316600052602052602060ff604060002054166040519015158152f35b506002548111156106e9565b346101995760003660031901126101995761075860018060a01b036001541633146117a7565b60015b60025481116107f75780600052600360205260406000209060ff8254169160058310156104dc5760026107949314610799575b50611643565b61075b565b600181015460018114806107ea575b156107be5750506107b881611ff9565b8261078e565b60021490816107dc575b50156107b8576107d781611c70565b6107b8565b6002915001544211836107c8565b50600282015442116107a8565b005b3461019957602036600319011261019957610812611558565b61081a611fd0565b6001600160a01b0316801561086f576020817f63860f6674590a6969c4fe1dc738a9c8f955407c09e6c67a6bdb818f4c35cd8a926bffffffffffffffffffffffff60a01b6001541617600155604051908152a1005b60405162461bcd60e51b815260206004820152601a60248201527f496e76616c69642047616d654d617374657220616464726573730000000000006044820152606490fd5b34610199576000366003190112610199576002546108d1816116b9565b906108df6040519283611697565b808252601f196108ee826116b9565b0160005b8181106109e657505060015b81811115610975578260405180916020820160208352815180915260206040840192019060005b818110610933575050500390f35b9193509160206080600192606087518051835261095685820151868501906115c7565b6040810151604084015201516060820152019401910191849392610925565b80600052600360205260406000209060ff8254169160086001820154910154906109b1604051946109a58661167b565b8486526020860161179b565b604084015260608301526000198101918183116104ab578261078e916109da6109e19588611746565b5285611746565b6108fe565b6020906040516109f58161167b565b600081526000838201526000604082015260006060820152828287010152016108f2565b34610199576000366003190112610199576001546040516001600160a01b039091168152602090f35b34610199576000366003190112610199576040516040810181811067ffffffffffffffff821117610ad257604052600681526554687265657360d01b602082015260405190602082528181519182602083015260005b838110610aba5750508160006040809484010152601f80199101168101030190f35b60208282018101516040878401015285935001610a98565b634e487b7160e01b600052604160045260246000fd5b34610199576000366003190112610199576000546040516001600160a01b039091168152602090f35b34610199576040366003190112610199576107f76024356004356118ec565b3461019957600036600319011261019957600254600160005b82821115610bfa57610b5b91506116d1565b6000916001905b80821115610b7c5760405180610b788582611584565b0390f35b610ba390826000949394526003602052610baa600560406000200160405193848092611703565b0383611697565b60005b8251811015610be7576001906001600160a01b03610bcb8286611746565b5116610be0610bd989611643565b9887611746565b5201610bad565b509192610bf49150611643565b90610b62565b610c19610c1f9183600052600360205260056040600020015490611652565b91611643565b90610b49565b3461019957604036600319011261019957600435610c4161156e565b9080151580610c88575b610c5490611605565b6000526003602052600c6040600020019060018060a01b0316600052602052602060ff604060002054166040519015158152f35b50600254811115610c4b565b346101995760403660031901126101995760043567ffffffffffffffff811161019957610cc59036906004016115d4565b9060243567ffffffffffffffff811161019957610ce69036906004016115d4565b9092610cfd60018060a01b036001541633146117a7565b801561108e578181036110495760038106610ff8576003810492600583901b92906001600160fb1b03821190600090815b878110610d3757005b610d42600254611643565b90816002558160005260036020526040600020600160ff198254161781554260038201556000928b60058301946008840160078501926009600687019601925b8d8b60038310610e51575050505050505050506003825403610dfe57610db360405192604084526040840190611703565b828103602084015285878252610199578260206001948b848f8290857fb66ba8feaec509998ef3217bc97fbf1a0f906b89fac25a4ace8ddff059a41f1298013701030190a101610d2e565b60405162461bcd60e51b815260206004820152602560248201527f456163682067616d65206d75737420686176652065786163746c79203320706c604482015264617965727360d81b6064820152608490fd5b610e5b918c6117f3565b356001600160a01b0381169b908c8103610199578c15610fba578c8f8160005260056020528c60ff60406000205416610f24575b610ed892610eb186869460019a610eac610ef49a9960409761181b565b6117f3565b358260008381528d602052205560009081528c602052208660ff198254161790558661181b565b60408d600090815287602052208460ff19825416179055611643565b9a80600052600460205286604060002055600052600560205260406000208260ff19825416179055018f90610d82565b505060009291925260046020526040600020548015908115610f95575b5015610f5057908c8f8c610e8f565b60405162461bcd60e51b815260206004820152601d60248201527f506c6179657220616c726561647920696e206163746976652067616d650000006044820152606490fd5b9050600052600360205260ff6040600020541660058110156104dc5760041438610f41565b60405162461bcd60e51b8152602060048201526016602482015275496e76616c696420706c61796572206164647265737360501b6044820152606490fd5b60405162461bcd60e51b815260206004820152602360248201527f506c6179657220636f756e74206d75737420626520646976697369626c65206260448201526279203360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601860248201527f4172726179206c656e67746873206d757374206d6174636800000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272139bc81c1b185e595c9cc81c1c9bdd9a591959606a1b6044820152606490fd5b34610199576020366003190112610199576001600160a01b036110ea611558565b1660005260046020526020604060002054604051908152f35b346101995760003660031901126101995761111c611fd0565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101995760003660031901126101995761118260018060a01b036001541633146117a7565b60405160206111918183611697565b60008252600036813760015b60025481116111e457806000526003825260ff604060002054169060058210156104dc5760026111d192146111d657611643565b61119d565b6111df81611c70565b611643565b60405180610b788582611584565b34610199576020366003190112610199576001600160a01b03611213611558565b166000526005602052602060ff604060002054166040519015158152f35b346101995760203660031901126101995760043561124d611770565b50801515806112e5575b61126090611605565b600052600360205260a0604060002060ff81541690600181015490600281015460046003830154920154926112a16040519561129b8761165f565b8661179b565b602085019081526040850191825260608501928352608085019384526112cb6040518096516115c7565b516020850152516040840152516060830152516080820152f35b50600254811115611257565b3461019957600036600319011261019957600254600160005b828211156113a95761131c91506116d1565b6000916001905b808211156113395760405180610b788582611584565b610ba390826000949394526003602052611360600860406000200160405193848092611703565b60005b8251811015611396576001906001600160a01b036113818286611746565b511661138f610bd989611643565b5201611363565b5091926113a39150611643565b90611323565b610c196113c89183600052600360205260086040600020015490611652565b9061130a565b34610199576040366003190112610199576004356113ea61156e565b9080151580611494575b6113fd90611605565b806000526003602052600660406000200160018060a01b03831660005260205260ff604060002054161561145a57600052600360205260076040600020019060018060a01b03166000526020526020604060002054604051908152f35b60405162461bcd60e51b8152602060048201526012602482015271506c61796572206e6f7420696e2067616d6560701b6044820152606490fd5b506002548111156113f4565b34610199576000366003190112610199576020600254604051908152f35b3461019957602036600319011261019957600435801515806114ff575b6114e490611605565b60005260036020526020600160406000200154604051908152f35b506002548111156114db565b34610199576020366003190112610199576004358015158061154c575b61153190611605565b60005260036020526020600260406000200154604051908152f35b50600254811115611528565b600435906001600160a01b038216820361019957565b602435906001600160a01b038216820361019957565b602060408183019282815284518094520192019060005b8181106115a85750505090565b82516001600160a01b031684526020938401939092019160010161159b565b9060058210156104dc5752565b9181601f840112156101995782359167ffffffffffffffff8311610199576020808501948460051b01011161019957565b1561160c57565b60405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590819d85b59481251608a1b6044820152606490fd5b60001981146104ab5760010190565b919082018092116104ab57565b60a0810190811067ffffffffffffffff821117610ad257604052565b6080810190811067ffffffffffffffff821117610ad257604052565b90601f8019910116810190811067ffffffffffffffff821117610ad257604052565b67ffffffffffffffff8111610ad25760051b60200190565b906116db826116b9565b6116e86040519182611697565b82815280926116f9601f19916116b9565b0190602036910137565b906020825491828152019160005260206000209060005b8181106117275750505090565b82546001600160a01b031684526020909301926001928301920161171a565b805182101561175a5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b6040519061177d8261165f565b60006080838281528260208201528260408201528260608201520152565b60058210156104dc5752565b156117ae57565b60405162461bcd60e51b815260206004820152601860248201527f4f6e6c792047616d654d61737465722063616e2063616c6c00000000000000006044820152606490fd5b919081101561175a5760051b0190565b805482101561175a5760005260206000200190600090565b9081549168010000000000000000831015610ad2578261184391600161186795018155611803565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b565b1561187057565b60405162461bcd60e51b8152602060048201526016602482015275506c61796572206e6f7420696e20616e792067616d6560501b6044820152606490fd5b156118b557565b60405162461bcd60e51b815260206004820152600f60248201526e47616d65206e6f742061637469766560881b6044820152606490fd5b9033600052600560205261190760ff60406000205416611869565b33600052600460205260406000205491826000526003602052604060002060ff81541660058110156104dc57600261193f91146118ae565b336000908152600c8201602052604090205460ff1615611be457600d81019060018060a01b0333166000528160205260ff60406000205416611bac57600183101580611ba1575b15611b6b5760018101600181541480611b5e575b611b38575b5460011901611afd57600281019384544211611ac257604051602081019185835260408201523360601b6060820152605481526119dd607482611697565b519020336000908152600a8301602052604090205403611a8c57336000908152600b82016020908152604080832086905593905291909120805460ff19166001179055600f81018054909260089291611a3590611643565b809455604051908152857f0319fcec55b5300a4dcc6f96b2df475a149433dc721ba7d96c8fb14495b748ac60203393a3015414908115611a81575b50611a785750565b61186790611c70565b905054421138611a70565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c995d99585b60921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601360248201527214995d99585b081c195c9a5bd908195b991959606a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260136024820152724e6f7420696e2072657665616c20737461676560681b6044820152606490fd5b611b4186611ff9565b60ff82541660058110156104dc5760040361199f57505050505050565b506002820154421161199a565b60405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642063686f69636560901b6044820152606490fd5b506003831115611986565b60405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995d99585b195960821b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270135d5cdd0818dbdb5b5a5d08199a5c9cdd607a1b6044820152606490fd5b15611c2457565b60405162461bcd60e51b81526020600482015260136024820152724e6f7420696e20636f6d6d697420737461676560681b6044820152606490fd5b90600481101561175a5760051b0190565b806000526003602052604060002060088101908154611c8e816116d1565b90600090600d8401825b828110611f635750505060005b818110611f4557505082549060038214611d0c575b50507fa7690f576eaef889ef9ef29d1eaee6c0e3b073108b66bb8009ec8af6428bb34591611d0791600460ff19825416178155600442910155604051918291602083526020830190611703565b0390a2565b604051916080611d1c8185611697565b60038452601f198101366020860137600b85019360005b60038110611f07575060405191611d4a8184611697565b36833760005b60038110611ed55750506000936020820160028151148015611ec7575b8015611eb9575b15611e35575060005b838110611dbf57505050505b60005b828110611d995750611cba565b600190611db96001600160a01b03611db18386611746565b5116886121e4565b01611d8c565b806002611df76040611dd36001958d611803565b905460039190911b1c60a086901b8690031660009081526020879052205486611c5f565b5114611e04575b01611d7d565b611e0e818a611803565b838060a01b0391549060031b1c16611e2f611e2889611643565b9888611746565b52611dfe565b600391505114159081611ea9575b81611e99575b50611e55575b50611d89565b825b818110611e645750611e4f565b80611e7160019288611803565b838060a01b0391549060031b1c16611e92611e8b87611643565b9686611746565b5201611e57565b6003915060600151141538611e49565b6040810151600314159150611e43565b506002606084015114611d74565b506002604084015114611d6d565b80611ee260019284611746565b51611f00611ef9611ef38388611c5f565b51611643565b9186611c5f565b5201611d50565b806040611f166001938b611803565b905460039190911b1c60a084901b84900316600090815260208990522054611f3e8285611746565b5201611d33565b600190611f5d6001600160a01b03611db18387611746565b01611ca5565b8060ff6040611f746001948b611803565b905460039190911b1c60a085901b859003166000908152602086905220541615611f9f575b01611c98565b611fa98189611803565b838060a01b0391549060031b1c16611fca611fc387611643565b9688611746565b52611f99565b6000546001600160a01b03163303611fe457565b63118cdaa760e01b6000523360045260246000fd5b806000526003602052604060002060018101906120196001835414611c1d565b600281018054421180156121d3575b1561218e57600e820154906008830193845480931461214257505061204c816116d1565b600091600c8401835b8281106120d55750505060005b8281106120b7575050507fa7690f576eaef889ef9ef29d1eaee6c0e3b073108b66bb8009ec8af6428bb34591611d0791600460ff19825416178155600442910155604051918291602083526020830190611703565b6001906120cf6001600160a01b03611db18386611746565b01612062565b8060ff60406120e66001948b611803565b905460039190911b1c60a085901b859003166000908152602086905220541615612111575b01612055565b61211b8189611803565b838060a01b0391549060031b1c1661213c61213588611643565b9787611746565b5261210b565b91509250600291505561012c4201908142116104ab57817fa359b664a68acd8839e42112eb50eff3408165e15074fde89ddb58a0db2e691d9260409255815190600282526020820152a2565b60405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f7420656e6420636f6d6d69742073746167652079657400000000006044820152606490fd5b50600e820154600883015414612028565b90600091808352600360205260408320916009830160018060a01b03821685528060205260ff604086205416156123bc5760018060a01b03821685526020526040842060ff19815416905560018060a01b03169182845260056020526040842060ff19815416905582845260046020528360408120558360088201945b8554808210156123b057856122768389611803565b905460039190911b1c6001600160a01b0316146122965750600101612261565b600096929394959619810190811161239c57906118436122b96122d29385611803565b905460039190911b1c6001600160a01b03169184611803565b805480156123885760001901906122e98282611803565b81549060018060a01b039060031b1b19169055555b6001546001600160a01b0316803b156123845790808060079493602460405180948193633ef6cf1d60e21b83528b60048401525af1612374575b505083600052016020527f51479c93d7646904d2282e9e79cddf11999ac774b7fd0289e2f59cb4ad0f086a6020604060002054604051908152a3565b8161237e91611697565b38612338565b5080fd5b634e487b7160e01b83526031600452602483fd5b634e487b7160e01b84526011600452602484fd5b505090919293506122fe565b60405162461bcd60e51b8152602060048201526011602482015270506c61796572206e6f742061637469766560781b6044820152606490fdfea26469706673582212206564f3896877ae13400bfa20144516430f2655d15dfee567bdc59e9b128308f164736f6c634300081c0033";

type ThreesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ThreesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Threes__factory extends ContractFactory {
  constructor(...args: ThreesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Threes & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Threes__factory {
    return super.connect(runner) as Threes__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ThreesInterface {
    return new Interface(_abi) as ThreesInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Threes {
    return new Contract(address, _abi, runner) as unknown as Threes;
  }
}
