/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { Doors, DoorsInterface } from "../../../contracts/games/Doors";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "DoorOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "winners",
        type: "address[]",
      },
    ],
    name: "GameCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "players",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "playerNumbers",
        type: "uint256[]",
      },
    ],
    name: "GameInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newGameMaster",
        type: "address",
      },
    ],
    name: "GameMasterChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "playerNumber",
        type: "uint256",
      },
    ],
    name: "PlayerEliminated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "roundNumber",
        type: "uint256",
      },
    ],
    name: "RoundEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "roundNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "RoundStarted",
    type: "event",
  },
  {
    inputs: [],
    name: "endExpiredGames",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endGame",
    outputs: [
      {
        internalType: "address[]",
        name: "winners",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gameIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameMaster",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getActivePlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActivePlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getDoorsOpened",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getGameInfo",
    outputs: [
      {
        components: [
          {
            internalType: "enum IGame.GameState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "currentRound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "roundEndTime",
            type: "uint256",
          },
        ],
        internalType: "struct IGame.GameInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGameName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getGameState",
    outputs: [
      {
        internalType: "enum IGame.GameState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerGameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getPlayerInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "playerAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "playerNumber",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "doorsOpened",
            type: "uint256",
          },
        ],
        internalType: "struct Doors.PlayerInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getPlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStats",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "activePlayerCount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentRound",
            type: "uint256",
          },
          {
            internalType: "enum IGame.GameState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct IGame.GameStats[]",
        name: "instanceStats",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalPlayers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalActivePlayers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalEliminatedPlayers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "activeGameCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_players",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_playerNumbers",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isPlayerInGame",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "openDoor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerGameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newGameMaster",
        type: "address",
      },
    ],
    name: "setGameMaster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startGames",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b503380603557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b603c816053565b50600180546001600160a01b0319163317905560a3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61238d806100b26000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80637fbbe46f116100de578063c59d484711610097578063e81de9f511610071578063e81de9f514610343578063ea17532e1461034b578063f2fde38b1461036b578063ffde0c741461037e57600080fd5b8063c59d48471461031a578063d0f3a21e14610333578063db0e127a1461033b57600080fd5b80637fbbe46f1461028d5780638b5b9ccc146102a05780638da5cb5b146102a8578063bbda33d9146102cd578063bdf84ae7146102f4578063c2e949271461030757600080fd5b8063460e204911610130578063460e20491461020257806347e1d55014610215578063574a5b20146102355780636cbc2ded14610268578063715018a614610270578063773b549d1461027a57600080fd5b80631bb412d6146101785780631e756ff91461019457806325b05c88146101a7578063342ed956146101c75780633532804d146101e75780633c4f5a66146101fa575b600080fd5b61018160025481565b6040519081526020015b60405180910390f35b6101816101a2366004611e48565b61039e565b6101816101b5366004611e74565b60046020526000908152604090205481565b6101da6101d5366004611e8f565b610406565b60405161018b9190611ea8565b6101816101f5366004611e48565b6104a5565b6101da61056e565b6101da610210366004611e8f565b6106f1565b610228610223366004611e8f565b61078e565b60405161018b9190611f2c565b610258610243366004611e74565b60056020526000908152604090205460ff1681565b604051901515815260200161018b565b6101da610839565b61027861087b565b005b610181610288366004611e74565b61088f565b61027861029b366004611fa5565b6108d3565b6101da610c0e565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161018b565b6040805180820182526005815264446f6f727360d81b6020820152905161018b9190612016565b6001546102b5906001600160a01b031681565b610278610315366004611e74565b610d86565b610322610e38565b60405161018b959493929190612064565b610278610f93565b610258611023565b61025861127a565b61035e610359366004611e8f565b6113d4565b60405161018b91906120ea565b610278610379366004611e74565b611543565b61039161038c366004611e8f565b61157e565b60405161018b9190612150565b6000826000811180156103b357506002548111155b6103d85760405162461bcd60e51b81526004016103cf90612164565b60405180910390fd5b505060009182526003602090815260408084206001600160a01b039390931684526008909201905290205490565b60608160008111801561041b57506002548111155b6104375760405162461bcd60e51b81526004016103cf90612164565b6000838152600360209081526040918290206006018054835181840281018401909452808452909183018282801561049857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161047a575b5050505050915050919050565b6000826000811180156104ba57506002548111155b6104d65760405162461bcd60e51b81526004016103cf90612164565b60008481526003602090815260408083206001600160a01b038716845260040190915290205460ff166105405760405162461bcd60e51b8152602060048201526012602482015271506c61796572206e6f7420696e2067616d6560701b60448201526064016103cf565b505060009182526003602090815260408084206001600160a01b039390931684526005909201905290205490565b6060600060015b60025481116105ae5760008181526003602052604090206006015461059a90836121a3565b9150806105a6816121b6565b915050610575565b5060008167ffffffffffffffff8111156105ca576105ca6121cf565b6040519080825280602002602001820160405280156105f3578160200160208202803683370190505b509050600060015b60025481116106e85760008181526003602090815260408083206006018054825181850281018501909352808352919290919083018282801561066757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610649575b5050505050905060005b81518110156106d35781818151811061068c5761068c6121e5565b60200260200101518585815181106106a6576106a66121e5565b6001600160a01b0390921660209283029190910190910152836106c8816121b6565b945050600101610671565b505080806106e0906121b6565b9150506105fb565b50909392505050565b60608160008111801561070657506002548111155b6107225760405162461bcd60e51b81526004016103cf90612164565b60008381526003602081815260409283902090910180548351818402810184019094528084529091830182828015610498576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161047a575050505050915050919050565b6107b36040805160608101909152806000815260200160008152602001600081525090565b816000811180156107c657506002548111155b6107e25760405162461bcd60e51b81526004016103cf90612164565b600083815260036020526040808220815160608101909252805490929190819060ff16600481111561081657610816611ef4565b815260028401546020820152600190930154604090930192909252509392505050565b6001546060906001600160a01b031633146108665760405162461bcd60e51b81526004016103cf906121fb565b61086e6115c6565b6108766116e5565b905090565b610883611862565b61088d600061188f565b565b6001600160a01b03811660009081526005602052604081205460ff166108b757506000919050565b506001600160a01b031660009081526004602052604090205490565b6001546001600160a01b031633146108fd5760405162461bcd60e51b81526004016103cf906121fb565b826109405760405162461bcd60e51b8152602060048201526013602482015272139bc81c1b185e595c9cc81c1c9bdd9a591959606a1b60448201526064016103cf565b82811461098f5760405162461bcd60e51b815260206004820152601860248201527f4172726179206c656e67746873206d757374206d61746368000000000000000060448201526064016103cf565b826000601460016109a082856121a3565b6109aa9190612232565b6109b4919061225b565b905060006109c2828461225b565b905060006109d0838561226f565b90506000805b84811015610c025760006002600081546109ef906121b6565b91829055506000818152600360205260408120805460ff1916600117815560028101919091559091508585841015610a2f57610a2c6001826121a3565b90505b60005b81811015610bb85760008e8e88818110610a4e57610a4e6121e5565b9050602002016020810190610a639190611e74565b90506001600160a01b038116610ab45760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420706c61796572206164647265737360501b60448201526064016103cf565b600384018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0383161790558c8c88818110610af657610af66121e5565b6001600160a01b0384166000818152600589016020908152604080832094820296909601359093556004890183528481208054600160ff19918216811790925560068b01805480840182559084528584200180546001600160a01b0319168517905592825260078a01909352939093208054909316179091555086610b7a816121b6565b6001600160a01b03909216600090815260046020908152604080832089905560059091529020805460ff191660019081179091559197505001610a32565b507fb66ba8feaec509998ef3217bc97fbf1a0f906b89fac25a4ace8ddff059a41f12826003018c8c604051610bef939291906122cd565b60405180910390a15050506001016109d6565b50505050505050505050565b6060600060015b6002548111610c4f5760008181526003602081905260409091200154610c3b90836121a3565b915080610c47816121b6565b915050610c15565b5060008167ffffffffffffffff811115610c6b57610c6b6121cf565b604051908082528060200260200182016040528015610c94578160200160208202803683370190505b509050600060015b60025481116106e857600081815260036020818152604080842090920180548351818402810184019094528084529091830182828015610d0557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ce7575b5050505050905060005b8151811015610d7157818181518110610d2a57610d2a6121e5565b6020026020010151858581518110610d4457610d446121e5565b6001600160a01b039092166020928302919091019091015283610d66816121b6565b945050600101610d0f565b50508080610d7e906121b6565b915050610c9c565b610d8e611862565b6001600160a01b038116610de45760405162461bcd60e51b815260206004820152601a60248201527f496e76616c69642047616d654d6173746572206164647265737300000000000060448201526064016103cf565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f63860f6674590a6969c4fe1dc738a9c8f955407c09e6c67a6bdb818f4c35cd8a9060200160405180910390a150565b606060008060008060025467ffffffffffffffff811115610e5b57610e5b6121cf565b604051908082528060200260200182016040528015610e9457816020015b610e81611dfb565b815260200190600190039081610e795790505b5094506000935083925082905060015b6002548111610f7f576000818152600360209081526040918290208251606081018452600682015481526002820154928101929092528054909282019060ff166004811115610ef557610ef5611ef4565b905287610f03600185612232565b81518110610f1357610f136121e5565b60209081029190910101526003810154610f2d90876121a3565b6006820154909650610f3f90866121a3565b94506004815460ff166004811115610f5957610f59611ef4565b14610f6c5782610f68816121b6565b9350505b5080610f77816121b6565b915050610ea4565b50610f8a8385612232565b91509091929394565b6001546001600160a01b03163314610fbd5760405162461bcd60e51b81526004016103cf906121fb565b60015b60025481116110205760008181526003602052604090206002815460ff166004811115610fef57610fef611ef4565b148015610fff5750806001015442115b1561100d5761100d826118df565b5080611018816121b6565b915050610fc0565b50565b3360009081526005602052604081205460ff1661107b5760405162461bcd60e51b8152602060048201526016602482015275506c61796572206e6f7420696e20616e792067616d6560501b60448201526064016103cf565b3360009081526004602090815260408083205480845260039092529091206002815460ff1660048111156110b1576110b1611ef4565b146110f05760405162461bcd60e51b815260206004820152600f60248201526e47616d65206e6f742061637469766560881b60448201526064016103cf565b33600090815260078201602052604090205460ff166111485760405162461bcd60e51b81526020600482015260146024820152732737ba1030b71030b1ba34bb3290383630bcb2b960611b60448201526064016103cf565b80600101544211156111665761115d826118df565b60009250505090565b3360009081526008820160205260408120805491611183836121b6565b9091555060009050611196600143612232565b6002830154604080519240602084015242908301526bffffffffffffffffffffffff1933606090811b8216818501526074840192909252609483018690523090911b1660b482015260c80160408051601f1981840301815291905280516020909101209050600061120860028361226f565b60405190158082529150339085907f4fff61170b45e4c2809f07a4bb02837d17fcdc209a7cb683ff938c9aa374100d9060200160405180910390a3806112665761125284336119d3565b61125b84611bd7565b600094505050505090565b61126f84611bd7565b600194505050505090565b6001546000906001600160a01b031633146112a75760405162461bcd60e51b81526004016103cf906121fb565b60016000815b60025481116113bc5760008181526003602052604090206004815460ff1660048111156112dc576112dc611ef4565b036112e757506113aa565b826112f1816121b6565b935060019050815460ff16600481111561130d5761130d611ef4565b14801561131d5750600681015415155b801561132b57506002810154155b156113a35760016002828101829055825460ff191617825561134c90611cde565b61135690426121a3565b60018201819055600282015460408051918252602082019290925283917fa359b664a68acd8839e42112eb50eff3408165e15074fde89ddb58a0db2e691d910160405180910390a26113a8565b600093505b505b806113b4816121b6565b9150506112ad565b50806000036113ce5760019250505090565b50905090565b6060816000811180156113e957506002548111155b6114055760405162461bcd60e51b81526004016103cf90612164565b600083815260036020819052604082209081015490919067ffffffffffffffff811115611434576114346121cf565b60405190808252806020026020018201604052801561148657816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816114525790505b50905060005b600383015481101561153a5760008360030182815481106114af576114af6121e5565b6000918252602080832090910154604080516080810182526001600160a01b0390921680835280855260058901845281852054838501528085526007890184528185205460ff16151583830152808552600889019093529092205460608301528451909250849084908110611526576115266121e5565b60209081029190910101525060010161148c565b50949350505050565b61154b611862565b6001600160a01b03811661157557604051631e4fbdf760e01b8152600060048201526024016103cf565b6110208161188f565b60008160008111801561159357506002548111155b6115af5760405162461bcd60e51b81526004016103cf90612164565b505060009081526003602052604090205460ff1690565b60015b600254811161102057600081815260036020526040902060028082015410158061160857506004815460ff16600481111561160657611606611ef4565b145b61166c5760405162461bcd60e51b815260206004820152602f60248201527f4e6f7420616c6c20696e7374616e636573206861766520636f6d706c6574656460448201526e206d6178696d756d20726f756e647360881b60648201526084016103cf565b6004815460ff16600481111561168457611684611ef4565b146116d257805460ff1916600417815560405182907fa7690f576eaef889ef9ef29d1eaee6c0e3b073108b66bb8009ec8af6428bb345906116c9906006850190612317565b60405180910390a25b50806116dd816121b6565b9150506115c9565b6060600060015b60025481116117255760008181526003602052604090206006015461171190836121a3565b91508061171d816121b6565b9150506116ec565b508067ffffffffffffffff81111561173f5761173f6121cf565b604051908082528060200260200182016040528015611768578160200160208202803683370190505b509150600060015b600254811161185c576000818152600360209081526040808320600601805482518185028101850190935280835291929091908301828280156117dc57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116117be575b5050505050905060005b815181101561184757818181518110611801576118016121e5565b6020026020010151868580611815906121b6565b965081518110611827576118276121e5565b6001600160a01b03909216602092830291909101909101526001016117e6565b50508080611854906121b6565b915050611770565b50505090565b6000546001600160a01b0316331461088d5760405163118cdaa760e01b81523360048201526024016103cf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000818152600360205260408120600681015490915b8181101561193f57600083600601600081548110611915576119156121e5565b6000918252602090912001546001600160a01b0316905061193685826119d3565b506001016118f5565b50815460ff191660041782556040805160008152602081019182905284917fa7690f576eaef889ef9ef29d1eaee6c0e3b073108b66bb8009ec8af6428bb3459161198891611ea8565b60405180910390a2827f8868888cc18628a149bc88cc32a91976ab30e2cd9aececb0cfe184a73fe551f983600201546040516119c691815260200190565b60405180910390a2505050565b60008281526003602090815260408083206001600160a01b0385168452600781019092529091205460ff16611a3e5760405162461bcd60e51b8152602060048201526011602482015270506c61796572206e6f742061637469766560781b60448201526064016103cf565b6001600160a01b03821660009081526007820160209081526040808320805460ff1990811690915560059092528220805490911690555b6006820154811015611b7a57826001600160a01b0316826006018281548110611aa057611aa06121e5565b6000918252602090912001546001600160a01b031603611b7257600682018054611acc90600190612232565b81548110611adc57611adc6121e5565b6000918252602090912001546006830180546001600160a01b039092169183908110611b0a57611b0a6121e5565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081600601805480611b4b57611b4b61232a565b600082815260209020810160001990810180546001600160a01b0319169055019055611b7a565b600101611a75565b506001600160a01b03821660008181526005830160205260409081902054905185917f51479c93d7646904d2282e9e79cddf11999ac774b7fd0289e2f59cb4ad0f086a91611bca91815260200190565b60405180910390a3505050565b6000818152600360205260409020600280820154101580611bfd57506006810154600110155b15611c8c57805460ff1916600417815560405182907fa7690f576eaef889ef9ef29d1eaee6c0e3b073108b66bb8009ec8af6428bb34590611c42906006850190612317565b60405180910390a2817f8868888cc18628a149bc88cc32a91976ab30e2cd9aececb0cfe184a73fe551f98260020154604051611c8091815260200190565b60405180910390a25050565b805460ff19166003178155600281015460405190815282907f8868888cc18628a149bc88cc32a91976ab30e2cd9aececb0cfe184a73fe551f99060200160405180910390a2611cda82611d28565b5050565b6000806006611cee600185612232565b611cf89190612340565b9050611d06603c6078612232565b811115611d165750603c92915050565b611d21816078612232565b9392505050565b600081815260036020819052604090912090815460ff166004811115611d5057611d50611ef4565b148015611d605750600681015415155b8015611d70575060028160020154105b15611cda57600281018054906000611d87836121b6565b9091555050805460ff191660029081178255810154611da590611cde565b611daf90426121a3565b60018201819055600282015460408051918252602082019290925283917fa359b664a68acd8839e42112eb50eff3408165e15074fde89ddb58a0db2e691d910160405180910390a25050565b6040518060600160405280600081526020016000815260200160006004811115611e2757611e27611ef4565b905290565b80356001600160a01b0381168114611e4357600080fd5b919050565b60008060408385031215611e5b57600080fd5b82359150611e6b60208401611e2c565b90509250929050565b600060208284031215611e8657600080fd5b611d2182611e2c565b600060208284031215611ea157600080fd5b5035919050565b602080825282518282018190526000918401906040840190835b81811015611ee95783516001600160a01b0316835260209384019390920191600101611ec2565b509095945050505050565b634e487b7160e01b600052602160045260246000fd5b60058110611f2857634e487b7160e01b600052602160045260246000fd5b9052565b6000606082019050611f3f828451611f0a565b602083015160208301526040830151604083015292915050565b60008083601f840112611f6b57600080fd5b50813567ffffffffffffffff811115611f8357600080fd5b6020830191508360208260051b8501011115611f9e57600080fd5b9250929050565b60008060008060408587031215611fbb57600080fd5b843567ffffffffffffffff811115611fd257600080fd5b611fde87828801611f59565b909550935050602085013567ffffffffffffffff811115611ffe57600080fd5b61200a87828801611f59565b95989497509550505050565b602081526000825180602084015260005b818110156120445760208186018101516040868401015201612027565b506000604082850101526040601f19601f83011684010191505092915050565b60a08082528651908201819052600090602088019060c0840190835b818110156120c35783518051845260208101516020850152604081015190506120ac6040850182611f0a565b506020939093019260609290920191600101612080565b50506020840197909752505060408101939093526060830191909152608090910152919050565b602080825282518282018190526000918401906040840190835b81811015611ee957835180516001600160a01b03168452602080820151818601526040808301511515908601526060918201519185019190915290930192608090920191600101612104565b6020810161215e8284611f0a565b92915050565b6020808252600f908201526e125b9d985b1a590819d85b59481251608a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561215e5761215e61218d565b6000600182016121c8576121c861218d565b5060010190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60208082526018908201527f4f6e6c792047616d654d61737465722063616e2063616c6c0000000000000000604082015260600190565b8181038181111561215e5761215e61218d565b634e487b7160e01b600052601260045260246000fd5b60008261226a5761226a612245565b500490565b60008261227e5761227e612245565b500690565b6000815480845260208401935082600052602060002060005b828110156122c35781546001600160a01b031686526020909501946001918201910161229c565b5093949350505050565b6040815260006122e06040830186612283565b82810360208401528381526001600160fb1b038411156122ff57600080fd5b8360051b808660208401370160200195945050505050565b602081526000611d216020830184612283565b634e487b7160e01b600052603160045260246000fd5b808202811582820484141761215e5761215e61218d56fea2646970667358221220d110f9de0d2bcdb1b16eef1fc61a4d0611b1c866cbeaf1e00ea742e86cbe1a9364736f6c634300081c0033";

type DoorsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DoorsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Doors__factory extends ContractFactory {
  constructor(...args: DoorsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Doors & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Doors__factory {
    return super.connect(runner) as Doors__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DoorsInterface {
    return new Interface(_abi) as DoorsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Doors {
    return new Contract(address, _abi, runner) as unknown as Doors;
  }
}
