/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Ascension,
  AscensionInterface,
} from "../../../../contracts/games/Ascension.sol/Ascension";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "winners",
        type: "address[]",
      },
    ],
    name: "GameCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "players",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "playerNumbers",
        type: "uint256[]",
      },
    ],
    name: "GameInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newGameMaster",
        type: "address",
      },
    ],
    name: "GameMasterChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "playerCount",
        type: "uint256",
      },
    ],
    name: "LevelElimination",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "PlayerCommitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "playerNumber",
        type: "uint256",
      },
    ],
    name: "PlayerEliminated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromLevel",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toLevel",
        type: "uint256",
      },
    ],
    name: "PlayerMoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "move",
        type: "uint256",
      },
    ],
    name: "PlayerRevealed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "roundNumber",
        type: "uint256",
      },
    ],
    name: "RoundEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "roundNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "phase",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "RoundStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "commitment",
        type: "bytes32",
      },
    ],
    name: "commitMove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endExpiredGames",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endGame",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gameIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameMaster",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActivePlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getCurrentPhase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getGameInfo",
    outputs: [
      {
        components: [
          {
            internalType: "enum GameState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "currentRound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "roundEndTime",
            type: "uint256",
          },
        ],
        internalType: "struct IGame.GameInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGameName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getGameState",
    outputs: [
      {
        internalType: "enum GameState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGames",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "gameId",
            type: "uint256",
          },
          {
            internalType: "enum GameState",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "currentRound",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activePlayerCount",
            type: "uint256",
          },
        ],
        internalType: "struct GameInstanceInfo[]",
        name: "gamesInfo",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getLastMove",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
    ],
    name: "getLevelPopulation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerGameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getPlayerInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "playerAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "playerNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "level",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastMove",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "hasCommitted",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "hasRevealed",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct Ascension.AscensionPlayerInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerLevel",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "getPlayerNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
    ],
    name: "getRoundEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "hasPlayerCommitted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "gameId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "hasPlayerRevealed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_players",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_playerNumbers",
        type: "uint256[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isPlayerInGame",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "playerGameId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "move",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "revealMove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newGameMaster",
        type: "address",
      },
    ],
    name: "setGameMaster",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startGames",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b503380603557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b603c816053565b50600180546001600160a01b0319163317905560a3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6132e2806100b26000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806384cd7d3311610104578063c2e94927116100a2578063e81de9f511610071578063e81de9f51461042a578063ea17532e14610432578063f2fde38b14610452578063ffde0c741461046557600080fd5b8063c2e94927146103e9578063d0f3a21e146103fc578063d216b62b14610404578063d7bdf85f1461041757600080fd5b8063a9ea37b6116100de578063a9ea37b614610383578063bbda33d914610396578063bdf84ae7146103c1578063c04c5947146103d457600080fd5b806384cd7d33146103435780638b5b9ccc146103565780638da5cb5b1461035e57600080fd5b806347e1d5501161017c578063715018a61161014b578063715018a6146102ea578063773b549d146102f45780637d1ddd341461031d5780637fbbe46f1461033057600080fd5b806347e1d5501461027c578063572e85ec1461029c578063574a5b20146102af5780636cbc2ded146102e257600080fd5b806325b05c88116101b857806325b05c88146102215780633532804d1461024157806336c86ede146102545780633c4f5a661461026757600080fd5b806312b19a13146101df57806318979f9e146102055780631bb412d614610218575b600080fd5b6101f26101ed366004612d0a565b610485565b6040519081526020015b60405180910390f35b6101f2610213366004612d3f565b6104d6565b6101f260025481565b6101f261022f366004612d6b565b60046020526000908152604090205481565b6101f261024f366004612d3f565b61057a565b6101f2610262366004612d8d565b61061e565b61026f6106b3565b6040516101fc9190612daf565b61028f61028a366004612d0a565b610835565b6040516101fc9190612e33565b6101f26102aa366004612d0a565b6108c0565b6102d26102bd366004612d6b565b60056020526000908152604090205460ff1681565b60405190151581526020016101fc565b61026f610908565b6102f261099d565b005b6101f2610302366004612d6b565b6001600160a01b031660009081526004602052604090205490565b6102f261032b366004612d8d565b6109b1565b6102f261033e366004612eac565b610e29565b6102d2610351366004612d3f565b611318565b61026f61137a565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101fc565b6102f2610391366004612d0a565b6114f3565b604080518082018252600981526820b9b1b2b739b4b7b760b91b602082015290516101fc9190612f1d565b60015461036b906001600160a01b031681565b6103dc61177e565b6040516101fc9190612f6b565b6102f26103f7366004612d6b565b611873565b6102f2611925565b6102d2610412366004612d3f565b6119c1565b6101f2610425366004612d3f565b611a23565b6102d2611ac7565b610445610440366004612d0a565b611bb2565b6040516101fc9190612fcf565b6102f2610460366004612d6b565b611d76565b610478610473366004612d0a565b611db1565b6040516101fc9190613059565b60008160008111801561049a57506002548111155b6104bf5760405162461bcd60e51b81526004016104b69061306d565b60405180910390fd5b505060009081526003602052604090206002015490565b6000826000811180156104eb57506002548111155b6105075760405162461bcd60e51b81526004016104b69061306d565b60008481526003602090815260408083206001600160a01b038716845260070190915290205460ff1661054c5760405162461bcd60e51b81526004016104b690613096565b505060009182526003602090815260408084206001600160a01b03939093168452600b909201905290205490565b60008260008111801561058f57506002548111155b6105ab5760405162461bcd60e51b81526004016104b69061306d565b60008481526003602090815260408083206001600160a01b038716845260070190915290205460ff166105f05760405162461bcd60e51b81526004016104b690613096565b505060009182526003602090815260408084206001600160a01b039390931684526008909201905290205490565b60008260008111801561063357506002548111155b61064f5760405162461bcd60e51b81526004016104b69061306d565b60158311156106905760405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a59081b195d995b609a1b60448201526064016104b6565b505060009182526003602090815260408084209284526013909201905290205490565b6060600060015b60025481116106f3576000818152600360205260409020600901546106df90836130d8565b9150806106eb816130eb565b9150506106ba565b5060008167ffffffffffffffff81111561070f5761070f613104565b604051908082528060200260200182016040528015610738578160200160208202803683370190505b509050600060015b600254811161082c576000818152600360209081526040808320600901805482518185028101850190935280835291929091908301828280156107ac57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161078e575b5050505050905060005b8151811015610817578181815181106107d1576107d161311a565b60200260200101518585806107e5906130eb565b9650815181106107f7576107f761311a565b6001600160a01b03909216602092830291909101909101526001016107b6565b50508080610824906130eb565b915050610740565b50909392505050565b61083d612ccd565b8160008111801561085057506002548111155b61086c5760405162461bcd60e51b81526004016104b69061306d565b600083815260036020526040908190208151606081019092528054909190819060ff1660048111156108a0576108a0612dfb565b815260200182600301548152602001826002015481525092505050919050565b6000816000811180156108d557506002548111155b6108f15760405162461bcd60e51b81526004016104b69061306d565b505060009081526003602052604090206001015490565b6001546060906001600160a01b031633146109355760405162461bcd60e51b81526004016104b690613130565b60408051600081526020810190915260015b60025481116109975760008181526003602052604090206002815460ff16600481111561097657610976612dfb565b036109845761098482611df9565b508061098f816130eb565b915050610947565b50905090565b6109a561257a565b6109af60006125a7565b565b3360009081526005602052604090205460ff16610a095760405162461bcd60e51b8152602060048201526016602482015275506c61796572206e6f7420696e20616e792067616d6560501b60448201526064016104b6565b3360009081526004602090815260408083205480845260039092529091206002815460ff166004811115610a3f57610a3f612dfb565b14610a7e5760405162461bcd60e51b815260206004820152600f60248201526e47616d65206e6f742061637469766560881b60448201526064016104b6565b336000908152600f8201602052604090205460ff16610ad35760405162461bcd60e51b8152602060048201526011602482015270135d5cdd0818dbdb5b5a5d08199a5c9cdd607a1b60448201526064016104b6565b33600090815260108201602052604090205460ff1615610b285760405162461bcd60e51b815260206004820152601060248201526f105b1c9958591e481c995d99585b195960821b60448201526064016104b6565b6005841115610b685760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964206d6f766560a01b60448201526064016104b6565b60018160010154148015610b7f5750806002015442115b15610bb057610b8d826125f7565b6004815460ff166004811115610ba557610ba5612dfb565b03610bb05750505050565b6002816001015414610bfa5760405162461bcd60e51b81526020600482015260136024820152724e6f7420696e2072657665616c20706861736560681b60448201526064016104b6565b8060020154421115610c445760405162461bcd60e51b815260206004820152601360248201527214995d99585b081c195c9a5bd908195b991959606a1b60448201526064016104b6565b6000848433604051602001610c7e93929190928352602083019190915260601b6bffffffffffffffffffffffff1916604082015260540190565b60408051601f198184030181529181528151602092830120336000908152600d86019093529120549091508114610ce85760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c995d99585b60921b60448201526064016104b6565b336000908152600c8301602052604090205485908103610d8357610d0e600560016130d8565b610d19600143613167565b60038501546040805192406020840152429083015233606090811b6bffffffffffffffffffffffff19169083015260748201526094810186905260b4810188905260d4016040516020818303038152906040528051906020012060001c610d809190613190565b90505b336000908152600e840160209081526040808320849055601086019091528120805460ff1916600117905560128401805491610dbe836130eb565b9091555050604051818152339085907f0319fcec55b5300a4dcc6f96b2df475a149433dc721ba7d96c8fb14495b748ac9060200160405180910390a3600983015460128401541480610e135750826002015442115b15610e2157610e2184611df9565b505050505050565b6001546001600160a01b03163314610e535760405162461bcd60e51b81526004016104b690613130565b82610e965760405162461bcd60e51b8152602060048201526013602482015272139bc81c1b185e595c9cc81c1c9bdd9a591959606a1b60448201526064016104b6565b828114610ee55760405162461bcd60e51b815260206004820152601860248201527f4172726179206c656e67746873206d757374206d61746368000000000000000060448201526064016104b6565b6002831015610f365760405162461bcd60e51b815260206004820152601760248201527f4e656564206174206c65617374203220706c617965727300000000000000000060448201526064016104b6565b82600a6000816001610f4882866130d8565b610f529190613167565b610f5c91906131a4565b90506000610f6a82856131a4565b90506000610f788386613190565b90506000805b8481101561130b576000600260008154610f97906130eb565b91829055506000818152600360208190526040909120805460ff191660019081178255918101919091559091508585841015610fdb57610fd86001826130d8565b90505b610fe6600a826131a4565b60048301819055600003610ffc57600160048301555b6110076002826131a4565b6005830181905560000361101d57600160058301555b60005b818110156112c15760008f8f8881811061103c5761103c61311a565b90506020020160208101906110519190612d6b565b90506001600160a01b0381166110a25760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420706c61796572206164647265737360501b60448201526064016104b6565b6001600160a01b03811660009081526005602052604090205460ff1615611159576001600160a01b03811660009081526004602052604090205480158061110b5750600460008281526003602052604090205460ff16600481111561110957611109612dfb565b145b6111575760405162461bcd60e51b815260206004820152601d60248201527f506c6179657220616c726561647920696e206163746976652067616d6500000060448201526064016104b6565b505b600684018054600181018255600091825260209091200180546001600160a01b0319166001600160a01b0383161790558d8d8881811061119b5761119b61311a565b6001600160a01b0384166000818152600889016020908152604080832094820296909601359093556007890183528481208054600160ff19918216811790925560098b01805480840182559084528584200180546001600160a01b03191685179055928252600a8a018452858220805490931617909155600b88018252838120819055600c88018252838120600019905580805260138801909152918220805492909150611248836130eb565b9091555050600080805260148501602090815260408083208054600180820183559185528385200180546001600160a01b0319166001600160a01b0387169081179091558452600483528184208990556005909252909120805460ff19169091179055866112b5816130eb565b97505050600101611020565b507fb66ba8feaec509998ef3217bc97fbf1a0f906b89fac25a4ace8ddff059a41f12826006018d8d6040516112f893929190613202565b60405180910390a1505050600101610f7e565b5050505050505050505050565b60008260008111801561132d57506002548111155b6113495760405162461bcd60e51b81526004016104b69061306d565b505060009182526003602090815260408084206001600160a01b03939093168452600f909201905290205460ff1690565b6060600060015b60025481116113ba576000818152600360205260409020600601546113a690836130d8565b9150806113b2816130eb565b915050611381565b5060008167ffffffffffffffff8111156113d6576113d6613104565b6040519080825280602002602001820160405280156113ff578160200160208202803683370190505b509050600060015b600254811161082c5760008181526003602090815260408083206006018054825181850281018501909352808352919290919083018282801561147357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611455575b5050505050905060005b81518110156114de578181815181106114985761149861311a565b60200260200101518585806114ac906130eb565b9650815181106114be576114be61311a565b6001600160a01b039092166020928302919091019091015260010161147d565b505080806114eb906130eb565b915050611407565b3360009081526005602052604090205460ff1661154b5760405162461bcd60e51b8152602060048201526016602482015275506c61796572206e6f7420696e20616e792067616d6560501b60448201526064016104b6565b3360009081526004602090815260408083205480845260039092529091206002815460ff16600481111561158157611581612dfb565b146115c05760405162461bcd60e51b815260206004820152600f60248201526e47616d65206e6f742061637469766560881b60448201526064016104b6565b600181600101541461160a5760405162461bcd60e51b81526020600482015260136024820152724e6f7420696e20636f6d6d697420706861736560681b60448201526064016104b6565b80600201544211156116545760405162461bcd60e51b815260206004820152601360248201527210dbdb5b5a5d081c195c9a5bd908195b991959606a1b60448201526064016104b6565b336000908152600f8201602052604090205460ff16156116aa5760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e4818dbdb5b5a5d1d1959607a1b60448201526064016104b6565b336000908152600d820160209081526040808320869055600f84019091528120805460ff19166001179055601182018054916116e5836130eb565b9091555050604051339083907f2e6ed0cae7a81e1893017dfafd5fbaf8594adcc50ff27b5f8eb70e0e90acf31590600090a3600981015460118201540361177957600260018201556117386078426130d8565b6002828101829055600383015460408051918252602082019290925290810191909152829060008051602061328d8339815191529060600160405180910390a25b505050565b606060025467ffffffffffffffff81111561179b5761179b613104565b6040519080825280602002602001820160405280156117d457816020015b6117c1612cf0565b8152602001906001900390816117b95790505b50905060015b600254811161186f57600081815260036020908152604091829020825160808101909352838352805490929182019060ff16600481111561181d5761181d612dfb565b815260038301546020820152600983015460409091015283611840600185613167565b815181106118505761185061311a565b6020026020010181905250508080611867906130eb565b9150506117da565b5090565b61187b61257a565b6001600160a01b0381166118d15760405162461bcd60e51b815260206004820152601a60248201527f496e76616c69642047616d654d6173746572206164647265737300000000000060448201526064016104b6565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f63860f6674590a6969c4fe1dc738a9c8f955407c09e6c67a6bdb818f4c35cd8a9060200160405180910390a150565b60015b60025481116119be5760008181526003602052604090206002815460ff16600481111561195757611957612dfb565b036119ab57600181600101541480156119735750806002015442115b1561198657611981826125f7565b6119ab565b6002816001015414801561199d5750806002015442115b156119ab576119ab82611df9565b50806119b6816130eb565b915050611928565b50565b6000826000811180156119d657506002548111155b6119f25760405162461bcd60e51b81526004016104b69061306d565b505060009182526003602090815260408084206001600160a01b039390931684526010909201905290205460ff1690565b600082600081118015611a3857506002548111155b611a545760405162461bcd60e51b81526004016104b69061306d565b60008481526003602090815260408083206001600160a01b038716845260070190915290205460ff16611a995760405162461bcd60e51b81526004016104b690613096565b505060009182526003602090815260408084206001600160a01b03939093168452600c909201905290205490565b6001546000906001600160a01b03163314611af45760405162461bcd60e51b81526004016104b690613130565b6001805b60025481116109975760008181526003602052604090206001815460ff166004811115611b2757611b27612dfb565b148015611b375750600981015415155b15611b9a57805460ff19166002178155600180820155611b586078426130d8565b6002820181905560038201546040805191825260016020830152810191909152829060008051602061328d8339815191529060600160405180910390a2611b9f565b600092505b5080611baa816130eb565b915050611af8565b606081600081118015611bc757506002548111155b611be35760405162461bcd60e51b81526004016104b69061306d565b6000838152600360205260408120600681015490919067ffffffffffffffff811115611c1157611c11613104565b604051908082528060200260200182016040528015611c7857816020015b6040805160e08101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c08201528252600019909201910181611c2f5790505b50905060005b6006830154811015611d6d576000836006018281548110611ca157611ca161311a565b60009182526020808320909101546040805160e0810182526001600160a01b039092168083528085526008890184528185205483850152808552600b890184528185205483830152808552600c89018452818520546060840152808552600f890184528185205460ff9081161515608085015281865260108a018552828620548116151560a0850152818652600a8a01909452932054909116151560c0820152845191925090849084908110611d5957611d5961311a565b602090810291909101015250600101611c7e565b50949350505050565b611d7e61257a565b6001600160a01b038116611da857604051631e4fbdf760e01b8152600060048201526024016104b6565b6119be816125a7565b600081600081118015611dc657506002548111155b611de25760405162461bcd60e51b81526004016104b69061306d565b505060009081526003602052604090205460ff1690565b6000818152600360205260408120600981015490919067ffffffffffffffff811115611e2757611e27613104565b604051908082528060200260200182016040528015611e50578160200160208202803683370190505b5090506000805b6009840154811015611ef3576000846009018281548110611e7a57611e7a61311a565b60009182526020808320909101546001600160a01b03168083526010880190915260409091205490915060ff16611eea57808484611eb7816130eb565b955081518110611ec957611ec961311a565b60200260200101906001600160a01b031690816001600160a01b0316815250505b50600101611e57565b5060005b81811015611f2a57611f2285848381518110611f1557611f1561311a565b6020026020010151612909565b600101611ef7565b5060005b60098401548110156120a1576000846009018281548110611f5157611f5161311a565b60009182526020808320909101546001600160a01b03168083526010880190915260409091205490915060ff1615612098576001600160a01b0381166000908152600e86016020908152604080832054600b89019092528220549091611fb783836130d8565b90506015811115611fc6575060155b611fd1888584612b97565b6001600160a01b0384166000908152600b89016020908152604080832084905583835260138b019091528120805491612009836130eb565b90915550506000818152601489016020908152604080832080546001810182559084528284200180546001600160a01b0319166001600160a01b038916908117909155808452600c8c0183529281902086905580518581529182018490528b917fb5ac3117b47d1355284f96ae97a243bdf1b9879eb07334364220e37d71fbdda4910160405180910390a35050505b50600101611f2e565b5060015b6015811161221757600081815260138501602052604081205490601583146120d15785600401546120d7565b85600501545b905080821180156120e85750601583105b1561220257600083815260148701602090815260408083208054825181850281018501909352808352919290919083018282801561214f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612131575b5050505050905060005b81518110156121c45787600a01600083838151811061217a5761217a61311a565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16156121bc576121bc89838381518110611f1557611f1561311a565b600101612159565b50604080518581526020810185905289917fd1d2639f7f04024f3049861f7802effaaa3cb181ff4660b1828e7f293a69408b910160405180910390a2505b5050808061220f906130eb565b9150506120a5565b5060058301546015600090815260138501602052604081205490916001911061223f57600191505b60005b60098601548110156122a657601586600b01600088600901848154811061226b5761226b61311a565b60009182526020808320909101546001600160a01b031683528201929092526040019020541461229e57600091506122a6565b600101612242565b5080156122b257600191505b600685015460009067ffffffffffffffff8111156122d2576122d2613104565b6040519080825280602002602001820160405280156122fb578160200160208202803683370190505b5090506000805b60068801548110156123c45760008860060182815481106123255761232561311a565b60009182526020808320909101546001600160a01b0316808352600f8c0190915260409091205490915060ff168061237757506001600160a01b038116600090815260108a01602052604090205460ff165b156123bb57808484612388816130eb565b95508151811061239a5761239a61311a565b60200260200101906001600160a01b031690816001600160a01b0316815250505b50600101612302565b5060005b818110156124445760008382815181106123e4576123e461311a565b6020908102919091018101516001600160a01b03166000908152600f8b0182526040808220805460ff1990811690915560108d01845281832080549091169055600d8c018352808220829055600e8c0190925290812055506001016123c8565b506000601188018190556012880155600387015460405190815288907f8868888cc18628a149bc88cc32a91976ab30e2cd9aececb0cfe184a73fe551f99060200160405180910390a2838061249d575060098701546002115b806124ad57506064876003015410155b156124ff57865460ff1916600417875560405188907fa7690f576eaef889ef9ef29d1eaee6c0e3b073108b66bb8009ec8af6428bb345906124f29060098b019061324c565b60405180910390a2612570565b600387018054906000612511836130eb565b9091555050865460ff191660031787556001808801556125326078426130d8565b6002880181905560038801546040805191825260016020830152810191909152889060008051602061328d8339815191529060600160405180910390a25b5050505050505050565b6000546001600160a01b031633146109af5760405163118cdaa760e01b81523360048201526024016104b6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008181526003602052604090206001808201541461264e5760405162461bcd60e51b81526020600482015260136024820152724e6f7420696e20636f6d6d697420706861736560681b60448201526064016104b6565b8060020154421180612667575060098101546011820154145b6126b35760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f7420656e6420636f6d6d697420706861736520796574000000000060448201526064016104b6565b600981015460118201540361271857600260018201556126d46078426130d8565b6002828101829055600383015460408051918252602082019290925290810191909152829060008051602061328d8339815191529060600160405180910390a25050565b600981015460009067ffffffffffffffff81111561273857612738613104565b604051908082528060200260200182016040528015612761578160200160208202803683370190505b5090506000805b600984015481101561282b5783600f01600085600901838154811061278f5761278f61311a565b60009182526020808320909101546001600160a01b0316835282019290925260400190205460ff16612823578360090181815481106127d0576127d061311a565b6000918252602090912001546001600160a01b031683836127f0816130eb565b9450815181106128025761280261311a565b60200260200101906001600160a01b031690816001600160a01b0316815250505b600101612768565b5060005b818110156128555761284d85848381518110611f1557611f1561311a565b60010161282f565b506009830154600211156128b057825460ff1916600417835560405184907fa7690f576eaef889ef9ef29d1eaee6c0e3b073108b66bb8009ec8af6428bb345906128a390600987019061324c565b60405180910390a2612903565b600260018401556128c26078426130d8565b6002848101829055600385015460408051918252602082019290925290810191909152849060008051602061328d8339815191529060600160405180910390a25b50505050565b60008281526003602090815260408083206001600160a01b0385168452600a81019092529091205460ff166129745760405162461bcd60e51b8152602060048201526011602482015270506c61796572206e6f742061637469766560781b60448201526064016104b6565b6001600160a01b0382166000908152600b8201602052604090205461299a828483612b97565b6001600160a01b0383166000908152600a830160209081526040808320805460ff199081169091556005835281842080549091169055600490915281208190555b6009830154811015612ae057836001600160a01b0316836009018281548110612a0657612a0661311a565b6000918252602090912001546001600160a01b031603612ad857600983018054612a3290600190613167565b81548110612a4257612a4261311a565b6000918252602090912001546009840180546001600160a01b039092169183908110612a7057612a7061311a565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555082600901805480612ab157612ab161325f565b600082815260209020810160001990810180546001600160a01b0319169055019055612ae0565b6001016129db565b50600154604051633ef6cf1d60e21b81526001600160a01b0385811660048301529091169063fbdb3c7490602401600060405180830381600087803b158015612b2857600080fd5b505af1925050508015612b39575060015b506001600160a01b03831660008181526008840160205260409081902054905186917f51479c93d7646904d2282e9e79cddf11999ac774b7fd0289e2f59cb4ad0f086a91612b8991815260200190565b60405180910390a350505050565b60008181526013840160205260408120805491612bb383613275565b909155505060008181526014840160205260408120905b8154811015612cc657836001600160a01b0316828281548110612bef57612bef61311a565b6000918252602090912001546001600160a01b031603612cbe5781548290612c1990600190613167565b81548110612c2957612c2961311a565b9060005260206000200160009054906101000a90046001600160a01b0316828281548110612c5957612c5961311a565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081805480612c9757612c9761325f565b600082815260209020810160001990810180546001600160a01b0319169055019055612cc6565b600101612bca565b5050505050565b60408051606081019091528060005b815260200160008152602001600081525090565b604080516080810190915260008082526020820190612cdc565b600060208284031215612d1c57600080fd5b5035919050565b80356001600160a01b0381168114612d3a57600080fd5b919050565b60008060408385031215612d5257600080fd5b82359150612d6260208401612d23565b90509250929050565b600060208284031215612d7d57600080fd5b612d8682612d23565b9392505050565b60008060408385031215612da057600080fd5b50508035926020909101359150565b602080825282518282018190526000918401906040840190835b81811015612df05783516001600160a01b0316835260209384019390920191600101612dc9565b509095945050505050565b634e487b7160e01b600052602160045260246000fd5b60058110612e2f57634e487b7160e01b600052602160045260246000fd5b9052565b6000606082019050612e46828451612e11565b602083015160208301526040830151604083015292915050565b60008083601f840112612e7257600080fd5b50813567ffffffffffffffff811115612e8a57600080fd5b6020830191508360208260051b8501011115612ea557600080fd5b9250929050565b60008060008060408587031215612ec257600080fd5b843567ffffffffffffffff811115612ed957600080fd5b612ee587828801612e60565b909550935050602085013567ffffffffffffffff811115612f0557600080fd5b612f1187828801612e60565b95989497509550505050565b602081526000825180602084015260005b81811015612f4b5760208186018101516040868401015201612f2e565b506000604082850101526040601f19601f83011684010191505092915050565b602080825282518282018190526000918401906040840190835b81811015612df0578351805184526020810151612fa56020860182612e11565b50604081810151908501526060908101519084015260209390930192608090920191600101612f85565b602080825282518282018190526000918401906040840190835b81811015612df057835160018060a01b03815116845260208101516020850152604081015160408501526060810151606085015260808101511515608085015260a0810151151560a085015260c0810151151560c08501525060e083019250602084019350600181019050612fe9565b602081016130678284612e11565b92915050565b6020808252600f908201526e125b9d985b1a590819d85b59481251608a1b604082015260600190565b602080825260129082015271506c61796572206e6f7420696e2067616d6560701b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b80820180821115613067576130676130c2565b6000600182016130fd576130fd6130c2565b5060010190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60208082526018908201527f4f6e6c792047616d654d61737465722063616e2063616c6c0000000000000000604082015260600190565b81810381811115613067576130676130c2565b634e487b7160e01b600052601260045260246000fd5b60008261319f5761319f61317a565b500690565b6000826131b3576131b361317a565b500490565b6000815480845260208401935082600052602060002060005b828110156131f85781546001600160a01b03168652602090950194600191820191016131d1565b5093949350505050565b60408152600061321560408301866131b8565b82810360208401528381526001600160fb1b0384111561323457600080fd5b8360051b808660208401370160200195945050505050565b602081526000612d8660208301846131b8565b634e487b7160e01b600052603160045260246000fd5b600081613284576132846130c2565b50600019019056fefd9d17e5565deea3d25918d95fc398673b9445ef0a96d12eaf3ab2b198756c65a2646970667358221220b30128c898a6d452762561163428a51d4394782cce4bc8f3fbfcb83924b34e1264736f6c634300081c0033";

type AscensionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AscensionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ascension__factory extends ContractFactory {
  constructor(...args: AscensionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Ascension & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Ascension__factory {
    return super.connect(runner) as Ascension__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AscensionInterface {
    return new Interface(_abi) as AscensionInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Ascension {
    return new Contract(address, _abi, runner) as unknown as Ascension;
  }
}
